b'' b'at the risk of getting lost in the clipper chip discussion i give a' b'summary on my recent question:' b'' b' the recent discussion in this news group suggests that a key search' b' attack' b' against des is quite feasible now. but normally des is applied in cbc or' b' cfb' b' mode where one chooses a random init vector of bytes. questions:' b'' b' makes it sense to handle the init vector as an additional key? then' b' we have' b' a bit key.' b'' b' if yes: is anything known about the security of this key scheme? can' b' we' b' break it faster than by exhaustive search through the bit key space?' b'' b'unfortunately the answer is no concealing the initialisation vector' b"essentially doesn't give any additional security. i got answers (from" b"opened my eyes. it's pretty simple:" b'' b'say e is encryption (and d decryption) with key k on 64-bit blocks.' b'' b'let c[0] be the initialisation vector,' b'm[1], m[2], the message blocks,' b'c[1], c[2], the cipher text blocks.' b'' b'then encryption in cipher block chaining (cbc) mode works by the formula' b'' b'c[i] e(m[i] xor c[i-1]),' b'' b'and decryption by' b'' b'm[i] c[i-1] xor d(c[i]).' b'' b"so if the attacker doesn't have c[0] this only affects the first message" b'block m[1]. but she can do her key search attack on m[2], m[3], b'' b'the situation in cipher feedback (cfb) mode is a bit more complicated but' b'similar and left as an exercise for the reader b'' b'finally there is the modified output feedback mode (ofb) where des (or' b'whatever block cipher you use) simply acts as random generator by' b'' b's[i] e(s[i-1]) with initialisation vector seed) s[0],' b'' b'and encryption is given by' b'' b'c[i] m[i] xor s[i].' b'' b"here the usual `known plaintext' attack against xor-bitstream ciphers" b'reduces the cracking to key search for k.' b'' b'--' b'klaus pommerening' b'institut fuer medizinische statistik und dokumentation' b'der johannes-gutenberg-universitaet' b'obere zahlbacher strasse w-6500 mainz, germany' 