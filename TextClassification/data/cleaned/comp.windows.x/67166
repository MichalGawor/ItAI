b'' b' animation is most frequently done by copying the the client resident ximages into' b' server resident pixmap(s) using xputimage. once this is done, the original ximages' b' can be deleted and the animation loop can be performed using xcopyarea from the pixmaps to the windows drawable.' b'' b' hope this is helpfull.' b'' b' john' b'' b'' b'i just implemented this and it seems i can just about achieve the display' b'rates 400x400x8 frames sec on ipx) that i get with sunview, though' b'it\'s a bit "choppy" at times. also, loading the data, making an ximage,' b"then xput'ing it into a pixmap is a bit cumbersome, so the animation is" b'slower to load than with sunview. is there a better way to load in the' b'data?' b'' b' if you need speed, and your client can run on the same host as the x server,' b' you should use the shared memory extension to the sample x server (mit-shm).' b' xdpyinfo will tell you if your server has this extension. this is certainly' b' available with the sample mit x server running under sunos.' b' a word of warning: make sure your kernel is configured to support shared' b' memory. and another word of warning: openwindows is slower than the mit' b' server.' b' i have written an imaging tool (using xview for the gui, by the way) which' b' yields over frames per second for bit images, running on a sparc' b' ipc (half the cpu grunt of an ipx). this has proved quite sufficient for' b' animations.' b'' b'\t\t\t\tregards,' b'' b'\t\t\t\t\trichard gooch....' b'' b'nick kisseberth) looks interesting, but i need someone to point me to some' b'documentation. is this method likely to give better results than server-' b"resident pixmaps? i'd also be interested in looking at the xview code" b'mentioned above...' b'' b"thanks for the help so far. if i get something decent put together, i'll" b'definitely post it to the net.' b'' b'-----------------------------------------------------------' b'| derek c. richardson tel: x b'| institute of astronomy fax: b'| cambridge, u.k. b'-----------------------------------------------------------' b'' 