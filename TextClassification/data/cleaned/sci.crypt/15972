b'' b'' b' second question: why!?!? why is such a strange procedure used, and not' b' a real rng this turns those s1,s2 in a kind of bottleneck for system-' b' security.' b'' b' the only theory that makes any sense is that s1 and s2 are either the' b'same for all chips, or vary among very few possibilities, so that anyone' b'trying to break the encryption by brute force need only plow through the' b'possible serial numbers about one billion), multiplied by the number' b'of different s1, s2 combinations.' b'' b"my interpretation of denning's description is that s1 and s2 are chosen" b'randomly by agents of the key escrow companies at the start of each b'chip programming session. i imagine that the chips are in a carrier which' b'will allow them all to be programmed fairly quickly there would not be' b'a need to transfer chips one at a time into a little pla programmer as some' b'people have envisioned.' b'' b'my guess as to why this procedure is used is that basing the keys on the' b's1 and s2 using a specified algorithm provides an (in-principle) checkable' b'way to verify that no back doors exist in the choice of the random numbers' b'used to generate the keys. since we have to trust the escrow companies' b'anyway, it does not weaken the system to have the keys be generated from' b'random seeds entered by the escrow agents. and since the algorithm for' b'key-generation is public (modulo skipjack secrecy) then in principle an' b'agent could challenge the procedure, ask for s1 and s2 to be exposed, and' b'run his own independent calculation of u1 and u2 to verify that that is' b'what is actually being put onto the floppies.' b'' b'and yes, there are many ways in which failures to follow this scheme could' b'be hard to check. the laptop probably will not really be destroyed each' b'time. hidden cameras in the ceiling could see the s1 and s2 entered by' b'the trusted escrow agents. back doors in the chip could allow u to be' b'recovered. heck, each chip could be recorded with the same u, ignoring' b'what was on the floppy.' b'' b'hal finney' 