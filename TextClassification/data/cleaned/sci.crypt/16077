b'' b'hi,' b'' b"i'd like to thank you all for the fast responses." b'special thanks go to those who replied (lexical order):' b'' b'' b'my question was:' b'' b'how sensible is des encrypted data towards bit errors? how much data per' b'bit will be lost in average (i assume you still have the correct key)?' b'' b'how much of the des-encrypted data is affected depends on the used' b'' b'|\tcfb cipher feedback mode' b'|\tecb electronic code book mode' b'|\tcbc cipher block chaining mode' b'|\tofb output feedback mode' b'|' b'|\teach mode does some stuff better than others. ofb and cfb are designed' b'|for communications streams more than for files.' b'' b'unfortunally, people strongly disagree which mode will lead to destruction' b'of all of the following data. sure seems that some modes will resync quite' b'fast, others will never, others will even only effect the very block.' b'' b'summarized, people said concerning *this* matter:' b'' b'/' b'|<todd w. arnold).' b'|' b'|if you use cbc (cihper block chaining), then the remainder of the data' b'|' b'|in cfb mode, des synchronizes quite fast (probably within block' b'\\' b'' b'maybe someone *definitely* knows what happens in which mode?' b'' b'nevertheless, thank you all very much again.' b'' b'axel dunkel' b'' b'--------------------------------------------------------------------' b'' b'i include the responses i got:' b'' b'' b'how sensible is des encrypted data towards bit errors? how much data per' b'bit will be lost in average (i assume you still have the correct key)?' b'' b"it depends on the mode you're using. for a single 64-bit input block, a" b'one-bit error will have a percent chance of corrupting each of the b'output bits in other words, it essentially turns the output block into' b"a random number. if you're encrypting data in cbc mode, however, only the" b'one 64-bit block will be affected. the next block, and all that follow it' b'will be decrypted properly.' b'' b"it's a good idea to have some kind of error correction in your system if" b'corrupted bits are likely.' b'' b'- todd' b'' b'--------------------------------------------------------------------' b'' b'' b'hello,' b'' b'how sensible is des encrypted data towards bit errors? how much data per' b'bit will be lost in average (i assume you still have the correct key)?' b'' b'at least bytes of data will be destroyed if one bit encrypted data is' b'in error.' b'' b'if you use cbc (cihper block chaining), then the remainder of the data' b'will be destroyed as well.' b'' b'des is very seisitive for single bit errors. this is as it should be.' b'' b'--' b'---' b"paul schlyter, swedish amateur astronomer's society (saaf)" b'nybrogatan a, tr, s-114 stockholm, sweden' b'' b'--------------------------------------------------------------------' b'' b'' b' how sensible is des encrypted data towards bit errors? how much data per' b' bit will be lost in average (i assume you still have the correct key)?' b'' b'probably very bad; you might lose the rest of the data stream. if you' b'want safety against dropped bits use an error correcting coder like the' b'freeware gnu ecc.' b'__ b"/\\__/ trust me. i know what i'm doing. \\x/ fold a fish for jesus!" b'' b'--------------------------------------------------------------------' b'' b'' b'how sensible is des encrypted data towards bit errors? how much data per' b'bit will be lost in average (i assume you still have the correct key)?' b'' b"it depends on the mode you're using des in." b'electronic code book (ecb) takes a block of input bits' b'and produces output bits, so if any bits are changed,' b'the entire block of bits becomes bad.' b'i forget which feedback mode is which.' b'in all of them, the results of encrypting one block affect later blocks.' b'with some modes, the system self-synchronizes, so errors are repaired' b'in a few blocks. with other modes, once one block is bad,' b'all later blocks will be bad too.' b'' b"there's also the framing problem. if you have a bit change," b"the block that it's in changes, and maybe later blocks also change." b'but if you have bits lost or bits added bits in, or bits out),' b'everything is confused after that.' b'' b'--------------------------------------------------------------------' b'' b'' b"depends on the mode you're using. cfb, for example, synchronises" b'pretty fast. figure a bit error will destroy the current block and the' b'next one.' b'' b'mjr.' b'' b'--------------------------------------------------------------------' b'' b'---' b"experience is what you get if you don't get what you want..." b'' b'systemberatung axel dunkel, koenigsberger strasse d kriftel, germany' b'' 