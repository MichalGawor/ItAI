b'' b'' b'' b' i understood that there are two methods to connect application code' b'to widgets:' b'' b' callbacks and actions' b'' b' the problem i face now is that i have a quite long piece of' b'application code' b' that performs a lot of drawing into a window. i want to connect this' b'to a' b' widget. no problem so far. i could use a callback function or an' b'action to do this, processing any events afterwards.' b'' b' but because the drawing takes some while, i want the application code' b'sequence' b' to be able to be interrupted by events. then i want to handle the' b'events' b' and resume with processing the application code at the point it was' b' interrupted.' b" it seems to me that this isn't possible, but how can i give the user" b'the' b' impression that his inputs are immediately processed b'' b'use a workproc. see xtappaddworkproc(3xt).' b'' b'you should split your drawing routnie up into small chunks (this' b'is the hard part). then, in the callback that starts the drawing,' b'you call xtappaddworkproc() to call your workproc the first time.' b'your workproc should be a function that returns a boolean...' b'true when you are finished, and false when you want to keep' b'processing. if you return false, the workproc is automatically' b're-installed.' b'' b'note that this method is better that using a time-out loop, since' b'events get processed in a more precedence-oriented manner. if you' b'are using the same ada bindings i am, however, you are hosed, and' b'should look into xtappaddtimeout(3xt).' b'' b'----------' b'joe hildebrand' b'software engineer' b'fuentez systems concepts' b'(703)273-1447' b'' b'standard disclaimers apply' 