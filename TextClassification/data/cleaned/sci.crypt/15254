b'' b'archive-name: cryptography-faq/part07' b'last-modified: b'' b'' b'faq for sci.crypt, part digital signatures and hash functions' b'' b'this is the seventh of ten parts of the sci.crypt faq. the parts are' b'mostly independent, but you should read the first part before the rest.' b"we don't have the time to send out missing parts by mail, so don't ask." b"notes such as ``[kah67]'' refer to the reference list in the last part." b'' b'the sections of this faq are available via anonymous ftp to rtfm.mit.edu' b'as /pub/usenet/news.answers/cryptography-faq/part[xx]. the cryptography' b'faq is posted to the newsgroups sci.crypt, sci.answers, and news.answers' b'every days.' b'' b'' b'contents:' b'' b'* what is a one-way hash function?' b'* what is the difference between public, private, secret, shared, etc.?' b'* what are md4 and md5?' b'* what is snefru?' b'' b'' b'* what is a one-way hash function?' b'' b'a typical one-way hash function takes a variable-length message and' b'produces a fixed-length hash. given the hash it is computationally' b"impossible to find a message with that hash; in fact one can't" b'determine any usable information about a message with that hash, not' b"even a single bit. for some one-way hash functions it's also" b'computationally impossible to determine two messages which produce the' b'same hash.' b'' b'a one-way hash function can be private or public, just like an' b"encryption function. here's one application of a public one-way hash" b'function, like md5 or snefru. most public-key signature systems are' b'relatively slow. to sign a long message may take longer than the user' b'is willing to wait. solution: compute the one-way hash of the message,' b'and sign the hash, which is short. now anyone who wants to verify the' b'signature can do the same thing.' b'' b'another name for one-way hash function is message digest function.' b'' b'* what is the difference between public, private, secret, shared, etc.?' b'' b'there is a horrendous mishmash of terminology in the literature for a' b'very small set of concepts. when an algorithm depends on a key which' b"isn't published, we call it a private algorithm; otherwise we call it" b'a public algorithm. we have encryption functions e and decryption' b'functions d, so that d(e(m)) m for any message m. we also have' b'hashing functions h and verification functions v, such that v(m,x) b'if and only if x h(m).' b'' b'a public-key cryptosystem has public encryption and private' b'decryption. checksums, such as the application mentioned in the' b'previous question, have public hashing and public verification.' b'digital signature functions have private hashing and public' b'verification: only one person can produce the hash for a message,' b'but everyone can verify that the hash is correct.' b'' b"obviously, when an algorithm depends on a private key, it's meant to" b"be unusable by anyone who doesn't have the key. there's no real" b"difference between a ``shared'' key and a private key: a shared key" b"isn't published, so it's private. if you encrypt data for a friend" b"rather than ``for your eyes only'', are you suddenly doing" b"``shared-key encryption'' rather than private-key encryption? no." b'' b'* what are md4 and md5?' b'' b'md4 and md5 are message digest functions developed by ron rivest.' b'definitions appear in rfc and rfc (see part code is' b'available from [ftpmd].' b'' b'note that a transcription error was found in the original md5 draft' b'rfc. the corrected algorithm should be called md5a, though some' b'people refer to it as md5.' b'' b'* what is snefru?' b'' b'snefru is a family of message digest functions developed by ralph' b'merkle. snefru-8 is an 8-round function, the newest in the family.' b"definitions appear in merkle's paper [me91a]. code is available from" b'[ftpsf].' 