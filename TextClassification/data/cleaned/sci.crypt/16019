b'' b'' b'' b' second question: why!?!? why is such a strange procedure used, and' b'not a real rng this turns those s1,s2 in a kind of bottleneck for' b'system- security.' b'' b' the only theory that makes any sense is that s1 and s2 are' b' either the same for all chips, or vary among very few' b' possibilities, so that anyone trying to break the encryption' b' by brute force need only plow through the possible serial' b' numbers about one billion), multiplied by the number' b' of different s1, s2 combinations.' b'' b'' b'suppose instead that s1 and s2 can be reconstructed given or of the' b'unit keys generated in a single batch (through some sort of known' b'plaintext attack, say). suppose further that or of the chips' b'programmed in each session never find their way into commercial' b'products, but instead end up "elsewhere".' b'' b'suppose the folks at "elsewhere" can determine a unit key, given' b'physical access to one of these chips. then those same folks can' b'determine s1 and s2 for the whole batch...' b'' b'too many suppositions? yeah, probably.' b'' b'- pat' b'' b'' b'' 