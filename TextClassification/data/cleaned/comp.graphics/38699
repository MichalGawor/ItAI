b'' b'' b"i'm working upon a game using an isometric perspective, similar to" b'that used in populous. basically, you look into a room that looks' b'similar to the following:' b'' b'xxxx' b'xxxxx xxxx' b'xxxx x xxxx' b'xxxx x xxxx' b'xxxx xxxx xxxx' b'x xxxx xxxx x' b'x xxxx xxxx x' b'x xxxx o xxxx x' b'xxxx xxxx' b'xxxx xxxx' b'xxxx xxxx' b'xxxx xxxx' b'xxxx' b'' b'the good thing about this perspective is that you can look and move' b'around in three dimensions and still maintain your peripheral vision. b'' b'since your viewpoint is always the same, the routines can be hard-coded' b"for a particular vantage. in my case, wall two's rising edge has a slope" b"of (i'm also using mode x, 320x240)." b'' b"i've run into two problems; i'm sure that other readers have tried this" b'before, and have perhaps formulated their own opinions:' b'' b'1) the routines for drawing walls were trivial, but when i ran a' b'packed-planar image through them, i was dismayed by the "jaggies." i\'m' b'now considered some anti-aliasing routines (speed is not really necessary).' b'is it worth the effort to have the artist draw the wall already skewed,' b'thus being assured of nice image, or is this too much of a burden?' b'' b'2) wall presents a problem; the algorithm i used tends to overly distort' b'the original. i tried to decide on paper what pixels go where, and failed.' b'has anyone come up with method for mapping a planar to crosswise sheared' b'shape?' b'' b'currently i take:' b'' b'1 b'17 b'33 b'49 b'' b'and produce:' b'' b'1 b'33 b'49 b'53 b'57 b'61 b'' b'line follows the slope. line is directly under line b'line moves up a line and left pixels. line is under line b'this fills the shape exactly without any unfilled pixels. but' b'it causes distortions. has anyone come up with a better way?' b'perhaps it is necessary to simply draw the original bitmap' b'already skewed?' b'' b'are there any other particularly sticky problems with this perspective?' b'i was planning on having hidden plane removal by using z-buffering.' b'locations are stored in (x,y,z) form.' b'' b'[*] for those of you who noticed, the top lines of wall (and wall b'*are* parallel with its bottom lines. this is why there appears to' b'be an optical illusion (ie. it appears to be either the inside or outside' b'of a cube, depending on your mood). there are no vanishing points.' b"this simplifies the drawing code for objects (which don't have to" b"change size as they move about in the room). i've decided that this" b'approximation is alright, since small displacements at a large enough' b'distance cause very little change in the apparent size of an object in' b'a real perspective drawing.' b'' b'hopefully the "context" of the picture (ie. chairs on the floor, torches' b'hanging on the walls) will dispell any visual ambiguity.' b'' b'thanks in advance for any help.' b'' b'--' b'till next time, \\o/ \\o/' b'< sam inala v' b'' 