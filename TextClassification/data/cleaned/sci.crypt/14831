b'' b'archive-name: ripem/faq' b'last-update: mar b'' b'about this posting' b'------------------' b'this is a listing of likely questions and information about ripem, a' b'program for public key mail encryption. it (this faq, not ripem) was' b'written and will be maintained by marc vanheyningen' b'newsgroups on a monthly basis; follow-up discussion specific to ripem' b'is redirected to the group alt.security.ripem.' b'' b"what's new" b'----------' b'i am now running a world wide web archive of ripem information. it' b"does not contain much of anything that isn't available elsewhere, but" b'it has convenient pointers to the most current version of this faq and' b'some other stuff. the url is "http://cs.indiana.edu/ripem/dir.html".' b'' b"this month's version has a fair amount of new pointers to information" b"on patents and stuff like that. i've also reordered a few things to" b"have a more sensible ordering. i hope i don't have to edit this again" b'soon. b'' b'disclaimer' b'----------' b'nothing in this faq should be considered legal advice, or anything' b"other than one layperson's opinion. if you want real legal advice," b'talk to a real lawyer, preferably one with experience in patent law,' b'export regulations, or whatever area of law is in question.' b'' b'list of questions' b'-----------------' b'1) what is ripem?' b'2) how can i get ripem?' b'3) will ripem run on my machine?' b'4) will ripem work with my mailer?' b'5) what is rsa?' b'6) what is des?' b'7) what is a fingerprint, like md5?' b'8) what is pem?' b"9) what's this about distributing and authenticating keys?" b"10) isn't it a bad idea to use patented algorithms in standards like pem?" b'11) what about rsadsi/pkp?' b'12) why do all ripem public keys look very similar?' b'13) what is pgp?' b'14) what about rpem?' b'15) what is mime?' b'16) what is tis/pem?' b'17) i have this simple way to defeat the security of ripem...' b'' b'questions and answers' b'---------------------' b'' b'1) what is ripem?' b'' b'ripem is a (not yet complete, but useful) implementation of privacy' b'enhanced mail (pem). ripem allows your electronic mail to have the' b'four security facilities provided by pem: disclosure protection' b'(optional), originator authenticity, message integrity measures, and' b'non-repudiation of origin (always). (see: "what is pem?")' b'' b'most of the code is in the public domain, except for the rsa routines,' b'which are a library called rsaref licensed from rsa data security inc.' b'' b'the current version of ripem is the current version of the' b'macintosh port of ripem is b'' b'2) how can i get ripem?' b'' b'ripem uses the library of cryptographic routines rsaref, which is' b'considered munitions and thus is export-restricted from distribution' b'to persons who are not citizens or permanent residents in the u.s or' b'canada without an export license. no such license has been obtained' b'(nor would one likely be granted unless the rsa key exchange were' b'shortened to bits and the symmetric cipher changed to something' b'weaker than des. there are some suggestions that this situation may' b'change now that clinton is in office.) the author requests in the' b'readme file that this law not be violated:' b'' b'#please do not export the cryptographic code in this distribution' b'#outside of the usa or canada. this is a personal request from me,' b'#the author of ripem, and a condition of your use of ripem.' b'' b'note that rsaref is not in the public domain, and a license for it is' b'included with the distribution. you should read it before using' b'ripem.' b'' b'ripem is available via anonymous ftp to citizens and permanent' b'residents in the u.s. from rsa.com; cd to rsaref/ and read the readme' b'file for info. note that the non-rsaref portion of ripem is not a' b'product of rsa data security, incorporated; they merely are helping' b'distribute it.' b'' b'ripem, as well as some other crypt stuff, has its "home site" on' b'ripem.msu.edu, which is open to non-anonymous ftp for users in the' b'u.s. and canada who are citizens or permanent residents. to find out' b'how to obtain access, ftp there, cd to pub/crypt/, and read the file' b'getting_access. for convenience, binaries for many architectures are' b'available here in addition to the full source tree.' b'' b'3) will ripem run on my machine?' b'' b'probably. it has already been ported to ms-dos and most flavors of' b'unix (sunos, next, linux, aix, ultrix, solaris, etc.) ports to' b'macintosh include a standard unix-style port and a rather nice' b'mac-like port written by raymond lau, author of stuffit. more ports' b'are expected, and help of users is invited.' b'' b'4) will ripem work with my mailer?' b'' b'probably. how easy and clean the effective interface is will depend' b'on the sophistication and modularity of the mailer, though. the users' b'guide, included with the distribution, discusses ways to use ripem' b'with many popular mailers, including berkeley, mush, elm, and mh.' b'code is also included in elisp to allow easy use of ripem inside gnu' b'emacs.' b'' b'if you make a new interface for ripem or create an improvement on one' b'in the distribution which you believe is convenient to use, secure,' b'and may be useful to others, feel free to post it to alt.security.ripem.' b'' b'5) what is rsa?' b'' b'rsa is a crypto system which is asymmetric, or public-key. this means' b'that there are two different, related keys: one to encrypt and one to' b'decrypt. because one cannot (reasonably) be derived from the other,' b'you may publish your encryption, or public, key widely and keep your' b'decryption, or private, key to yourself. anyone can use your public' b'key to encrypt a message, but only you hold the private key needed to' b'decrypt it. note that the "message" sent with rsa is normally just' b'the des key to the real plaintext. (see "what is des?")' b'' b'note that the above only provides for disclosure protection. for' b'originator authenticity, message integrity, and non-repudiation of' b'origin services to be implemented, the fingerprint of the message' b'(see "what is a fingerprint, like md5?") is encrypted with the' b"sender's private key. the recipient, or a dispute-resolving" b"authority, can use the sender's public key to decrypt it and confirm" b'that the message must have come from the sender and was not altered.' b'' b'rsa was named for the three men (rivest, shamir and adleman) who' b'invented it. to find out lots more about rsa and modern cryptography' b'in general, ftp to rsa.com and look in pub/faq/. some information' b'also may be in sci.crypt.' b'' b'6) what is des?' b'' b'des is the data encryption standard, a widely used symmetric, or' b'secret-key, crypto system. unlike rsa, des uses the same key to' b'encrypt and decrypt messages. however, des is much faster than rsa.' b'' b'ripem uses both des and rsa; it generates a random key and encrypts' b'your mail with des using that key. it then encrypts that key with the' b"recipient's public rsa key and includes the result in the letter," b'allowing the recipient to recover the des key.' b'' b'des is sometimes considered weak because it is somewhat old and uses a' b'key length considered too short by modern standards. however, it' b'should be reasonably safe against an opponent smaller than a large' b'corporation or government agency. it is not likely that the pem' b'standard will incorporate support for other symmetric ciphers in the' b'near future, because there is a strong feeling that pem should be' b'stable so it can become utilized widely without early problems with' b'interoperability.' b'' b'7) what is a fingerprint, like md5?' b'' b'md5 is a message digest algorithm produced by rsa data security inc.' b'it provides a 128-bit fingerprint, or cryptographically secure hash,' b'of the plaintext. it is cryptographically secure because it is not' b'possible (in a reasonable amount of computation) to produce a' b'different plaintext which produces the same fingerprint. thus,' b"instead of signing the entire message with the sender's private key," b'only the md5 of the message needs to be signed for authentication.' b'' b'md5s can also be exchanged directly for authentication; for example,' b'ripem public keys include an md5 of the public key in the file, so' b'parties wishing to confirm their keys are authentic via a separate' b'channel merely need exchange md5s of keys and verify their accuracy.' b'' b'md5 is sometimes used for other purposes; for example, it is often' b'used to map an input of arbitrary length to bits of data, as a' b'passphrase interpreter or cookie generator.' b'' b'md5 is described in its entirety (including an implementation in c) in' b'rfc b'' b'there have been some recent suggestions that md5 may not be as strong' b'a hash as was originally believed; presumably some other hash' b'function will be used if this is accepted as true.' b'' b'8) what is pem?' b'' b'pem is privacy enhanced mail, a standard for allowing transfer of' b'encrypted electronic mail generated over a long period of time by a' b'working group of experts. it is described in rfcs these' b'documents have been approved and obsolete the old rfcs b'' b'ripem is not really a complete implementation of pem, because pem' b'specifies certificates for authenticating keys, which ripem does not' b'handle at this time. their addition is planned.' b'' b"9) what's this about distributing and authenticating keys?" b'' b'for a remote user to be able to send secure mail to you, she must know' b'your public key. for you to be able to confirm that the message' b'received came from her, you must know her public key. it is important' b'that this information be accurate; if a "bad guy" convinces her that' b'his key is in fact yours, she will send messages which he can read.' b'' b'ripem allows for three methods of key management: a central server,' b'the distributed finger servers, and a flat file. all three are' b'described in the ripem users guide which is part of the distribution.' b'none of them provide perfect security. the pem standard calls for' b'key management by certificates; the addition of this feature to ripem' b'is planned, but chicken-egg issues still exist.' b'' b"10) isn't it a bad idea to use patented algorithms in standards like pem?" b'' b'this issue has been considered in the standards process. rfc b'the specification for internet standards, has a discussion (section' b'6) on what specifications for nondiscriminatory availability must be' b'met for a patented method to be included in a standard. rfc b'addresses this issue with regard to the patents covering public-key' b'cryptography.' b'' b'this does not, of course, mean that all questions are settled or that' b'everyone is in agreement. an interesting exchange on the use of' b'patented algorithms in standards with regard to public-key' b'cryptography is in the league for programming freedom archive' b'(available via ftp: ftp.uu.net:/doc/lpf) in the files bidzos.letter' b'and bidzos.response. (amusingly, the lpf files on ftp.uu.net are' b'compressed with a patented algorithm.)' b'' b'11) what about rsadsi/pkp?' b'' b'rsa data security, inc. (rsadsi) is a california-based company' b'specializing in cryptographic technologies. public key partners is a' b'firm which holds exclusive sub-licensing rights of the following u.s.' b'patents and all of their corresponding foreign patents:' b'' b'cryptographic apparatus and method' b'("diffie-hellman")............................... no. b'' b'public key cryptographic apparatus' b'and method ("hellman-merkle").................... no. b'' b'cryptographic communications system and' b'method ("rsa")................................... no. b'' b'exponential cryptographic apparatus' b'and method ("hellman-pohlig").................... no. b'' b'pkp claims these four patents cover all known methods of public key' b'cryptography. the two businesses are rather closely related (for' b'example, the same person, jim bidzos, is president of both of them.)' b'pkp has licensed this technology to a considerable number of' b'companies (ibm, dec, motorola, at&t, lotus...) for use in their' b'products. pkp has also threatened and filed lawsuits defending their' b'patents.' b'' b'ripem was originally created with no connection to rsadsi other than' b'its use of the rsaref library, and for no reason other than its' b"author's desire to see widespread use of public-key cryptography." b'however, after the ball started rolling, people at rsadsi got' b'interested. rsadsi decided to carry ripem on its ftp site, and some' b'people there started making their own ripem keys and contributing' b'code. ripem even won the "best application built on rsaref in b'award.' b'' b'12) why do all ripem public keys look very similar?' b'' b'ripem public keys begin with a pkcs (public-key cryptography' b'standards) identifier describing various characteristics about the' b'key, so the first bunch of characters in your key may be the same as' b"those of lots of other people's keys. this does not mean your keys" b'are similar, but only that they are the same class of key, were' b'generated with the same program, are of the same length, etc.' b'' b'13) what is pgp?' b'' b'pgp is another cryptographic mail program called pretty good privacy.' b'pgp has been around longer than ripem, and works somewhat differently.' b'pgp is not compatible with ripem in any way, though pgp does also use rsa.' b'' b'a few major differences between pgp and ripem:' b'' b'- pgp has more key management features, particularly for users without' b'a direct network connection.' b'' b'- ripem conforms to the pem rfcs and thus has a greater probability' b'of working with other pem software. pgp makes no attempt to be' b'compatible with anything other than itself.' b'' b'- ripem uses rsaref, a library of rsa routines from rsadsi which' b'comes with a license allowing noncommercial use. pgp uses its own' b'implementation of rsa. pkp claims that it is a violation of its' b'patents to "make, use or sell" pgp in the u.s. or canada without' b'either a license or written permission. (see: "disclaimer")' b'(see: "what about rsadsi/pkp?") phil zimmermann, the author of' b'pgp, stopped distributing it after being threatened with legal' b'action; he believed that a licensing scheme could be arranged, but' b"it hasn't happened and there seems little prospect of it happening" b"in the future. he acknowledges in the pgp user's guide:" b'' b'#in fact, if you live in the usa, and you are not a federal agency,' b"#you shouldn't actually run pgp on your computer, because public" b'#key partners wants to forbid you from running my software. pgp is' b'#contraband.' b'' b'- both pgp and ripem are export-restricted, and cannot be sent outside' b'the u.s. and canada without an export license. however, pgp' b'already exists on many ftp sites in europe and other places.' b'' b'whether you use pgp or ripem or whatever, the documentation to pgp is' b'recommended reading to anyone interested in such issues.' b"unfortunately, it's not distributed separately from the program," b'which can be difficult to find in the u.s. on ftp sites due to' b'liability concerns.' b'' b'14) what about rpem?' b'' b'rpem stands for rabin privacy enhanced mail. it was similar to ripem,' b'but used a public-key cipher invented by rabin (which is not rsa) in' b'an attempt to avoid the patents on public-key systems. it was' b'written by mark riordan, who later wrote ripem.' b'' b'its distribution was halted when, contrary to the beliefs of many' b'(including rabin), pkp claimed that their patents were broad enough' b'to cover the cipher employed. this claim is not universally' b'accepted, but was not challenged for pragmatic reasons.' b'' b'rpem is not really used anymore. it is not compatible with ripem or pgp.' b'' b'15) what is mime?' b'' b'mime stands for multipurpose internet mail extensions, and is' b'described in rfc you can find out about it in the newsgroup' b'comp.mail.mime; a faq exists on it. how pem should interact with' b'mime is not yet entirely clear; some people use the stopgap solution' b'of having a mime type application/x-ripem in order to send ripem' b'messages as mime ones. i hope some standards will emerge. draft' b'internet documents exist on the matter.' b'' b'16) what is tis/pem?' b'' b'trusted information systems is working on a version of privacy' b'enhanced mail for general availability. last i heard, it was' b'rumored to be integrated into an existing mail user agent (mh)' b"rather than a stand-alone system, and in beta test. i don't know" b'much more than that.' b'' b'17) i have this simple way to defeat the security of ripem...' b'' b'you may wish to check the companion post "ripem-attacks" which' b"discusses some of the more obvious attacks on ripem's security and" b'what procedures will minimize the risk. ripem\'s main "weak area" is' b'probably key distribution.' 