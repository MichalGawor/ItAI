b'' b'' b'how hard would it be to somehow interface them to some of the popular' b'motorola microcontrollers. i am a novice at microcontrollers, but i am' b'starting to get into them for some of my projects. i have several 256k' b'simms laying around from upgraded macs and if i could use them as "free"' b'memory in one or two of my projects that would be great. one project that' b'comes to mind is a caller id device that would require quite a bit of ram' b'to store several hundered cid records etc...' b'' b'assuming 68hc11...' b'in expanded muxed mode, you *could* do it. much easier if you get a dram' b'controller ic. the mmi could be used to implement this, or you' b'could use a counter and a huge multiplexer to provide row/column/refresh' b'address multiplexing. the thing with drams is that they require wierd' b'timing, address multiplexing, and refresh.' b'' b'actually, if you wanted to use a ic, you could look at an897, which' b'has a neat controller built in. there is also the 683xx, i think one' b'of those has the dram controller built in. this one is for the b'dram, however, the has only one more address line, adding only' b'another component or so. the 256k simms are basically or b'dram chips (or their equivalent in fewer packages).' b'' b"it *can* be done, just takes a bit of logic design. i'm actually" b"about to do it using a 65c02p3 chip... i've got 256k simms... that's" b"2 megabytes on my apple //e... (used to be in my b'' 