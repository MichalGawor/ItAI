b'' b'' b'what exactly does the windows bitmap format look like? i mean, how is' b"the data stored: width, height, no. of colours, bitmap data? i couldn't" b'find anything in ths user manual, is there any other reference material' b'which would give me this information?' b'' b'newsgroups: comp.os.ms-windows.programmer.misc,alt.binaries.pictures.utilities' b'keywords: dib bmp bitmaps file formats' b'date: dec gmt' b'organization: precambiran electronics, rochester, ny' b'lines: b'xref: cradle.titech comp.os.ms-windows.programmer.misc:3609' b'' b'' b'' b'' b'' b'' b'' b'' b'guide to creation of dib images' b'' b'' b'thomas b. kinsman' b'' b'precambrian electronics' b'29 falstaff rd.' b'rochester, ny b'copyright march b'' b'' b'' b'abstract' b'' b'the format of images created for use by ms windows b"applications is\tdocumented in\tthe ms windows programmer's" b'reference guide.\tthis guide is intended as a clearify some' b'wording\tof the specifications, and to put forth a' b'recommendation among the various alternatives.' b'' b'please send updates/corrections/suggestions and revisions\t to' b'me. please thank me for writing this on my own time by' b'keeping my name with the document. thank you for your' b'respect.' b'' b'this document copyright, by thomas b. kinsman.' b'if desired, a postscript version of\tthis document\t is' b'available.' b'' b'this information is free.\t you get more than what you pay for.' b"don't sue me if i'm wrong." b'' b'' b'overview' b'' b'the dib image file format is intended to be a "device independent bitmap"' b'file format. (what microsoft means by "device independent" is unclear to' b'me.) four pixel resolutions are supported: bit, bit, bit, and bit' b'pixels.' b'' b'these images were intended for use on dos (ibm, or little-endian) systems.' b'if\tyou are creating them on another architecture you will have to byte-' b'swap all short and long integer values.' b'' b'by convention, dib images end in the extension ".bmp". this is because' b'' b'' b'' b'march b'' b'' b'' b'' b'' b'- b'' b'' b'they are a super-set of earlier "bitmap image files". consequently you' b'will sometimes hear dib files referred to as "bmp" files.' b'' b'since dib images files are a super-set, there are three "flavors" of dib' b'images:' b'o dos dib images. these are the recommended\t convention, and the' b'form which i will describe how to create.\t they are intended for' b'applications running under ms windows in a dos environment.' b'o os/2 dib images. my understanding is that these are the\tflavor' b'of dib images that were used by the presentation manager.' b'o old-style bitmap images.' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'march b'' b'' b'' b'' b'' b'- b'' b'' b'differences between flavors' b'' b'the dos dib images consist of:' b'1. a "bitmapfileheader" file header which identifies the file\t as a' b'dib file.\t this\theader\talso gives the total size of the image' b'file, and the offset to the image data.' b'2. a "bitmapinfoheader" image header which\t specifies the\t image' b'attributes.' b'3. an optional palette of colors used by the image. if it exists,' b'this may contain or entries. each entry is a windows' b'rgbquad structure.' b'4. the image data itself.' b'' b'' b'the os/2 dib images consist of:' b'1. the same "bitmapfileheader" file header which identifies the file' b'as\t a dib\t file.\t this header also gives the total size of the' b'image file, and the offset to the image data.' b'2. a "bitmapcoreheader" image header which\t specifies the\t image' b'attributes.' b'3. an optional palette of colors used by the image. again, if this' b'exists it\t may contain or entries. each entry is a' b'windows rgbtriple structure.' b'4. the image data itself.' b'' b'' b'the old style image bitmap consists of:' b'1. either a bitmapinfoheader or a bitmapcoreheader.\t which\theader' b'type is determined by the first long integer (dword) value.' b'2. an optional color palette.\t this\tpalette\t may be composed of' b'either windows\trgbquad\t structures (if the\theader\twas a' b'bitmapinfoheader) or windows rgbtriple structures (if the\theader' b'was a bitmapcoreheader).' b'3. the image data itself.' b'' b'' b'creating dib image files.' b'' b'creating a dos dib image file consists of several straight forward\tsteps.' b'the headers need to be created and then written to the file. these header' b'structures are defined in the ms windows/3.0 "windows.h"\tinclude\t file.' b'palette information needs\t to be\t stored for images that are not 24-bit' b'images. the five general steps are:' b'1. filling in the bitmapfileheader\t and\tthe bitmapinfoheader' b'structures the basic image information.' b'2. if the image is a 1-bit, 4-bit, or an 8-bit image,\t creating the' b'color palette of rgbquads.' b'3. calculating the total file size and putting this information in' b'' b'' b'' b'march b'' b'' b'' b'' b'' b'- b'' b'' b'the "bfsize" field of the bitmapfileheader.' b'4. calculating the offset to the image data from the\tstart of the' b'file, and putting this in the "bfoffbits"\tfield of the' b'bitmapfileheader.' b'5. writing to the file the bitmapfileheader,\tthe bitmapinfoheader,' b'the color palette, and the image data (in that order).' b'' b'the following sections describe structures in terms of microsoft c\t type-' b'defined keywords.\tthe following table describes these keywords for those' b'not familiar with microsoft c.' b'' b'_______________________________________' b'|\t\t\t\t\t b'| type-defined keywords in microsoft c.|' b'|______________________________________|' b'| typedef |\t meaning\t\t b'|_________|____________________________|' b'| byte |\t unsigned character\t b'| word |\t two byte unsigned integer b'| dword |\t four byte unsigned integer|' b'|_________|____________________________|' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'march b'' b'' b'' b'' b'' b'- b'' b'' b'the bitmapfileheader' b'' b'this structure is defined in "windows.h" as:' b'typedef struct tagbitmapfileheader b'word\t bftype;' b'dword\t bfsize;' b'word\t bfreserved1;' b'word\t bfreserved2;' b'dword\t bfoffbits;' b'} bitmapfileheader;' b'' b'the "bftype" field is the two ascii characters \'b\' and \'m\'.\t this\tserves' b'to\tidentify the file as\t a dib\t image file. on an intel byte ordered' b'machine (ibm or a compatible), this constant can be formed\tin c as the' b"quantity ('m' 'b') 0x4d42 on an intel system." b'' b'the "bfsize" field is the total size of the file. for our\tpurposes this' b'field is equal to: the size of the bitmapfileheader, plus the size of the' b'bitmapinfoheader, plus the number of entries in the\t color\tpalette\t times' b'the\t size of a rgbquad, plus the number of bytes of image data.\tif the' b'image data is being written out in an uncompressed form, this value can be' b'calculated\tahead of time. otherwise, this field needs to be filled in' b'later.' b'' b'both the "bfreserved1" and the "bfreserved2" fields are always set to' b'zero.' b'' b'the "bfoffbits" field is set to the offset to the start of the image data' b'from the start of the file. for our purposes, this field should be set' b'to:\t the size of\tthe bitmapfileheader,\t plus\t the size of the' b'bitmapinfoheader, plus the number of entries in the color palette times' b'the size of a rgbquad. this works out because the image data is written' b'write after the color palette if one exists.' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'march b'' b'' b'' b'' b'' b'- b'' b'' b'the bitmapinfoheader' b'' b'this structure is defined in "windows.h" as:' b'typedef struct tagbitmapinfoheader{' b'dword\t bisize;' b'dword\t biwidth;' b'dword\t biheight;' b'word\t biplanes;' b'word\t bibitcount;' b'dword\t bicompression;' b'dword\t bisizeimage;' b'dword\t bixpelspermeter;' b'dword\t biypelspermeter;' b'dword\t biclrused;' b'dword\t biclrimportant;' b'} bitmapinfoheader;' b'' b'the "bisize" field is set to the size of the bitmapinfoheader structure' b'itself. when reading the image\t file,\tthis value is what is used to' b'determine that the image\t contains a bitmapinfoheader\t and not a' b'bitmapcoreheader.' b'' b'the "biwidth" field is the width of the image in image pixels.' b'' b'the "biheight" field is the height of the image in image lines.' b'' b'the "biplanes" field should always be set to this data is written out' b'as if there was one color plane.' b'' b'the "bibitcount" field is the bit-depth of the image. this must be either' b'1, or depending on the bit-depth of the image data.' b'' b'the "bicompression" field tells how the image data is compressed if it is' b'compressed.\t dib\timages\tsupport\t two forms of\t run-length encoding.' b"however, i have never seen any images which use it, and don't know yet how" b'it works. set this field to zero (long zero, or 0l), to indicate that the' b'data is not compressed.' b'' b'all subsequent fields of the bitmapinfoheader structure may be set to' b'zero. a requirement of\tthe interpretting software that it be able to' b'compute these fields as necessary from the previous information.' b'' b'the field which you might want to explicitly specify might be "biclrused".' b'for\t 4-bit\tand 8-bit images this field\t indicates that not all of the' b'possible color entries are used and that the image\t contains "biclrused"' b'colors. if you are using only colors with an 8-bit image, then you may' b'only want to save of the possible palette entries. generally, set' b'this field to zero.' b'' b'' b'' b'march b'' b'' b'' b'' b'' b'- b'' b'' b'color palettes' b'' b'each entry of a color palette is\t a rgbquad structure.\t the rgbquad' b'structure is defined in the "windows.h" include file as:' b'typedef struct tagrgbquad b'byte\t rgbblue;' b'byte\t rgbgreen;' b'byte\t rgbred;' b'byte\t rgbreserved;' b'} rgbquad;' b'the "rgbreserved" field is always zero. for each color used, the\tamount' b'of blue, green, and red are filled into the structure and the structure is' b'written to the file. a value of zero in the "rgbblue", "rgbgreen", or' b'"rgbred" fields indicates that\tthat particular component does not' b'contribute to the color composition. a value of in\tany of\t these' b'fields indicates that the component contributes fully\t to the color' b'composition.' b'' b'' b'' b'image data' b'' b'there are three surprises about the ordering of image data\tin dib\t image' b'file. the\t creator of this format was determined to be creative, and' b'certainly was.' b'' b'within the image data, each line written out is padded to the next four' b'byte quantity. so, if you had an 8-bit image which was only one pixel' b'wide, you still have to write out four bytes for every image line. the' b'number of bytes per line can be calculated as:' b'' b'bytes_per_line (width_in_pix bit_depth b'' b'---or, in terms of the fields of the bitmapinfoheader structure---' b'' b'bytes_per_line (biwidth bibitcount b'' b'' b'when writing out your image data, you must write it out bottom line first.' b'the\t bottom line of the image as you would look at it on the screen is the' b'first line of image data in the file.' b'' b'for 1-bit, 4-bit, and 8-bit images, information is written\tas you\t would' b'expect. one bit\timages\tare padded eight pixels to a byte. four bit' b'images are padded two pixels to a byte. eight bit images are written one' b'pixel per byte. twenty-four bit images are written three bytes per pixel.' b'however, for 24-bit images the information must be\t written out in the' b'order blue, green, red. while most image file formats write data out in' b'' b'' b'' b'march b'' b'' b'' b'' b'' b'- b'' b'' b'an "rgb" ordering, a dib image file\t writes\t the data out\t in an\t "bgr"' b'ordering.' b'' b'summary' b'' b'this should provide enough information\tto create dib\t images\t from' b'applications such\tas scanners or for image exporting routines.\tif you' b'find out any more about dib images, please pass the information on\tto me' b'so that i can modify this document accordingly.' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'' b'march b'' b'' b'--' b'"practice random kindness and senseless acts of beauty."\t-anon' b'' b'--' b'senior, department of infomation science,' b'faculty of science, university of tokyo, japan.' 