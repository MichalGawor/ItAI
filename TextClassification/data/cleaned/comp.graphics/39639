b'' b'my three-d library does a lot of projections duh but currently it' b"is projecting an object's vertices on a _per triangle basis_. this is" b'grossly inefficient for of the objects displayed which can' b'be optimized by doing projections one time, once for each vertex but' b"objects whose z-extents intersect the hither plane can't benefit from" b'this because new vertices must be created during z-clipping.' b'' b'anyone have any better ideas?' b'' b"yes. here's what you should do." b'' b'keep the vertices in an array, and have the polygons (triangles are okay,' b'but n-sided polygons are slightly more efficient) store the indices into' b'the array of the vertices that comprise them. you set a flag for each' b"vertex when you transform it, so you don't have to transform any vertex" b'more than once; you also do backface elimination before processing the' b"polygon, so that vertices that belong only to bacfacing polys don't have" b'to be transformed at all.' b'' b"whenever you transform a vertex, check if it's on the far side of the hither" b'plane; if it is, you can project it right away and store the result.' b'' b'then do your z clip; any vertices that get produced will have to have their' b'projection done at that stage.' b'' b'--' b'bernie roehl' b'university of waterloo dept of electrical and computer engineering' b'voice: x [work]' 