b'' b'' b'tcpview is the result of several problems we had at uw. we have several' b'network general sniffers which are heavily used to help debug problems on' b'several hundred subnets. these are good tools, but they are heavy,' b'2) hard to find when you need one, limited in their software expandibility,' b'4) difficult to use to upload data for analysis, cannot be remotely' b'operated, and cannot resolve names with dns, requiring much manual' b'manipulation of the name table. we also sometimes use tcpdump, but we found' b'it too difficult for most people, did not have enough information for' b'many protocols, could not be used interactively, could not handle' b'tcp streams and could not read sniffer files. however, tcpdump did do' b'a reasonable job of decoding a large number of protocols, and could be easily' b'modified. tcpview is an attempt to resolve these problems' b'by adding a motif interface to tcpdump and expanding its features.' b'' b'tcpview has been tested on a decstation and sun under ultrix and' b'sunos respectively. it should work on the same systems as tcpdump.' b'it compiles with cc and gcc on the dec and sun. to build tcpview you will' b'need motif or better.' b'' b'the following files are available for anonymous ftp from' b'ftp.cac.washington.edu in /pub/networking' b'' b'tcpview-1.0.tar.z\ttcpview and tcpdump source code' b'tcpview-1.0.sun.tar.z\tsun4 binaries' b'tcpview-1.0.dec.tar.z\tdec mips ultrix binaries' b'' b'what tcpview adds to tcpdump:' b'- easier interface' b'- enhanced protocol decoding' b'- hex display of frame' b'- capture based on time, number of frames, or user interrupt' b"- can show ethernet addresses with manufacturer's name" b'- ethernet address host table' b'- can easily follow a stream, highlighting out-of-order frames' b'- can send tcp data to an external file or filter for additional' b'processing.' b'' b'-------------------------------------------------------------------------------' b'changes to tcpdump b'' b'new features:' b'' b"now reads and writes network general sniffer files. when used with '-r', the" b'file type will be automatically detected.' b'' b'can now read in (and use) an snmp mib file.' b'' b'the hex format has been changed.' b'' b'new time options have been added.' b'' b'options were added to allow viewing and processing of the data in tcp packets.' b'' b'bugs were fixed in the relative tcp sequence numbers. (-s flag)' b'' b'new flags:' b'-r\tread sniffer file. not usually needed, except for reading from stdin' b'-ttt\tprints delta times' b'-tttt\tprints times relative to the first frame' b'-w\twrite a sniffer save file (use with -w)' b'-x\tprint frame (minus link-level header) in hexdump format.' b'sample output:' b'' b'16:36:23.349851 jeff.cac.washington.edu.1285 nic.funet.fi.ftp: s win b'0000 8a 3c 7c 9c 5f e..(....<.|.._p.' b'0010 d6 5b 4a ...d....[.j.....' b'' b'-x\tprint tcp data in hexdump format (used with -z)' b'-z\twrite tcp data to stdout (use with -t to eliminate timestamp)' b'-z\twrite frames and tcp data to stdout' b'' b'' b'martin m. hunt' b'networks distributed computing' b'university of washington' b'' b'' b'' b'' b'' b'' b'--' b'' b'-------------------------------------------------------------------------------' b'networks and distributed computing university of washington' 