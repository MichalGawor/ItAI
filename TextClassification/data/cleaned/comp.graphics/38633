b'' b'preston) writes:' b' why not use the pd c library for reading/writing tiff files? it took me a' b' good minutes to start using them in your own app.' b'' b'i certainly do use it whenever i have to do tiff, and it usually works' b"very well. that's not my point. i'm philosophically< opposed to it" b'because of its complexity.' b'' b"this complexity has led to some programs' poor tiff writers making" b"some very bizarre files, other programs' inability to load tiff" b"images (though they'll save them, of course), and a general" b'inability to interchange images between different environments' b'despite the fact they all think they understand tiff.' b'' b'as the saying goes, "it\'s not me i\'m worried about- it\'s all the' b'other< assholes out there!" i\'ve had big trouble with misuse and' b'abuse of tiff over the years, and i chalk it all up to the immense (and' b'unnecessary) complexity of the format.' b'' b'in the words of the tiff spec, appendix g, page g-1 (capitalized' b'emphasis mine):' b'' b'"the only problem with this sort of success is that tiff was designed' b'to be powerful and flexible, at the expense of simplicity. it takes a' b'fair amount of effort to handle all the options currently defined in' b'this specification (probably no application does a complete job),' b'and that is currently the only way you can be sure< that you will be' b'able to import any tiff image, since there are so many' b'image-generating applications out there now."' b'' b'' b"if a program (or worse all applications) can't read every< tiff" b"image, that means there are some it won't- some that i might have to" b'deal with. why would i want my images to be trapped in that format? i' b"don't and neither should anyone who agrees with my reasoning- not" b'that anyone does, of course! b'' b'ab' 