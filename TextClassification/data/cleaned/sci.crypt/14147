b'' b'archive-name: ripem/faq' b'last-update: sun, mar b'' b'about this posting' b'------------------' b'this is a (still rather rough) listing of likely questions and' b'information about ripem, a program for public key mail encryption. it' b'(this faq, not ripem) was written and will be maintained by marc' b'variety of newsgroups on a monthly basis; follow-up discussion specific' b'to ripem is redirected to the group alt.security.ripem.' b'' b'this month, i have reformatted this posting in an attempt to comply' b'with the standards for hypertext faq formatting to allow easy' b'manipulation of this document over the world wide web. let me know' b'what you think.' b'' b'disclaimer' b'----------' b'nothing in this faq should be considered legal advice, or anything' b"other than one person's opinion. if you want real legal advice, talk" b'to a real lawyer.' b'' b'questions and answers' b'---------------------' b'' b'1) what is ripem?' b'' b'ripem is a program which performs privacy enhanced mail (pem) using' b'the cryptographic techniques of rsa and des. it allows your' b'electronic mail to have the properties of authentication (i.e. who' b'sent it can be confirmed) and privacy (i.e. nobody can read it except' b'the intended recipient.)' b'' b'most of the code is in the public domain, except for the rsa routines,' b'which are a library called rsaref licensed from rsa data security inc.' b'' b'2) how can i get ripem?' b'' b'ripem contains the library of cryptographic routines rsaref, which is' b'considered munitions and thus is export-restricted from distribution' b'to people who are not citizens or permanent residents of the u.s. or' b'canada. therefore, the following request is quoted from the readme' b'file:' b'' b'#please do not export the cryptographic code in this distribution' b'#outside of the usa or canada. this is a personal request from me,' b'#the author of ripem, and a condition of your use of ripem.' b'' b'note that rsaref is not in the public domain, and a license for it is' b'included with the distribution. you should read it before using' b'ripem.' b'' b'the best way to get it is to ask a friend for a copy, since this will' b'reduce the load on those sites that do carry it (not to mention the' b'humans that run them.) naturally this requires that you trust the' b'friend.' b'' b'ripem is available via anonymous ftp to citizens and permanent residents' b'in the u.s. from rsa.com; cd to rsaref/ and read the readme file for' b'info. last i looked, this site contains only the source tree, and' b'does not contain compiled binaries or the nice mac version.' b'' b'ripem, as well as some other crypt stuff, has its "home site" on' b'rpub.cl.msu.edu, which is open to non-anonymous ftp for users in the' b'u.s. and canada who are citizens or permanent residents. to find out' b'how to obtain access, ftp there, cd to pub/crypt/, and read the file' b'getting_access. for convenience, binaries for many architectures are' b'available here in addition to the full source tree.' b'' b'3) will ripem run on my machine?' b'' b'probably. it has already been ported to ms-dos and most flavors of' b'unix (sunos, next, linux, aix, ultrix, solaris, etc.) ports to' b'macintosh include a standard unix-style port and a rather nice' b'mac-like port written by raymond lau, author of stuffit. more ports' b'are expected, and help of users is invited.' b'' b'4) will ripem work with my mailer?' b'' b'probably. how easy and clean the effective interface is will depend' b'on the sophistication and modularity of the mailer, though. the users' b'guide, included with the distribution, discusses ways to use ripem' b'with many popular mailers, including berkeley, mush, elm, and mh.' b'code is also included in elisp to allow easy use of ripem inside gnu' b'emacs.' b'' b'if you make a new interface for ripem or create an improvement on one' b'in the distribution which you believe is convenient to use, secure,' b'and may be useful to others, feel free to post it to alt.security.ripem.' b'' b'5) what is rsa?' b'' b'rsa is a crypto system which is asymmetric, or public-key. this means' b'that there are two different, related keys: one to encrypt and one to' b'decrypt. because one cannot (reasonably) be derived from the other,' b'you may publish your encryption, or public key widely and keep your' b'decryption, or private key to yourself. anyone can use your public' b'key to encrypt a message, but only you hold the private key needed to' b'decrypt it. (note that the "message" sent with rsa is normally just' b'the des key to the real message. (see "what is des?")' b'' b'note that the above only provides for privacy. for authentication,' b'the fingerprint of the message (see "what is a fingerprint, like' b'md5?") is encrypted with the sender\'s private key. the recipient can' b"use the sender's public key to decrypt it and confirm that the message" b'must have come from the sender.' b'' b'rsa was named for the three men (rivest, shamir and adleman) who' b'invented it. to find out more about rsa, ftp to rsa.com and look in' b'pub/faq/ or look in sci.crypt.' b'' b'6) what is des?' b'' b'des is the data encryption standard, a widely used symmetric, or' b'secret-key, crypto system. unlike rsa, des uses the same key to' b'encrypt and decrypt messages. however, des is much faster than rsa.' b'' b'ripem uses both des and rsa; it generates a random key and encrypts' b'your mail with des using that key. it then encrypts that key with the' b"recipient's public rsa key and includes the result in the letter," b'allowing the recipient to recover the des key.' b'' b'des is sometimes considered weak because it is somewhat old and uses a' b'key length considered too short by modern standards. however, it' b'should be reasonably safe against an opponent smaller than a large' b'corporation or government agency. it is not unlikely that future' b'ripems will strengthen the symmetric cipher, possibly by using' b'multiple encryption with des.' b'' b'7) what is pem, and how does ripem relate?' b'' b'pem is privacy enhanced mail, a system for allowing easy transfer of' b'encrypted electronic mail. it is described in rfcs these' b'documents have been approved and obsolete the old rfcs b'' b'ripem is not really a complete implementation of pem, because pem' b'specifies certificates for authenticating keys, which ripem does not' b'handle at this time. their addition is planned.' b'' b"8) what's this about distributing and authenticating keys?" b'' b'for a remote user to be able to send secure mail to you, she must know' b'your public key. for you to be able to confirm that the message' b'received came from her, you must know her public key. it is important' b'that this information be accurate; if a "bad guy" convinces her that' b'his key is in fact yours, she will send messages which he can read.' b'' b'ripem allows for three methods of key management: a central server,' b'the distributed finger servers, and a flat file. all three are' b'described in the ripem users guide which is part of the distribution.' b'none of them provide perfect security.' b'' b'9) why do all ripem public keys look very similar?' b'' b'ripem public keys begin with a pkcs identifier describing various' b'characteristics about the key, so the first bunch of characters in' b"your key may be the same as those of lots of other people's keys." b'this does not mean your keys are similar, but only that they are the' b'same class of key, were generated with the same program, are of the' b'same length, etc.' b'' b'10) what is a fingerprint, like md5?' b'' b'md5 is a message digest algorithm produced by rsa data security inc.' b'it provides a 128-bit fingerprint, or cryptographically secure hash,' b'of the plaintext. it is cryptographically secure because it is not' b'possible (in a reasonable amount of computation) to produce a' b'different plaintext which produces the same fingerprint. thus,' b"instead of signing the entire message with the sender's private key," b'only the md5 of the message needs to be signed for authentication.' b'' b'md5 is sometimes used for other purposes; for example, it is often' b'used to map an input of arbitrary length to bits of data, as a' b'passphrase interpreter or cookie generator.' b'' b'md5 is described in its entirety (including an implementation in c) in' b'rfc b'' b'11) what is pgp?' b'' b'pgp is another cryptographic mail program called pretty good privacy.' b'pgp has been around longer than ripem, and works somewhat differently.' b'pgp is not compatible with ripem in any way, though pgp does also use rsa.' b'' b'some major differences between pgp and ripem:' b'' b'- pgp has more key management features, particularly for users without' b'a direct network connection.' b'' b'- ripem conforms to the pem rfcs and thus has a greater probability of' b'working with other pem software. pgp makes no attempt to be compatible' b'with anything other than pgp (in fact, pgp is not compatible with' b'pgp b'' b'- ripem uses rsaref, a library of rsa routines from rsa data security' b'inc. rsaref comes with a license which allows noncommercial use.' b'pgp uses its own implementation of rsa which is not licensed; thus,' b'pkp, the firm holding the u.s. patents on the rsa algorithm, claims' b'that it is a infringement of that patent to make, use or sell pgp in' b"the u.s. or canada. in acknowledgement of this, pgp's original" b'author, phil zimmermann, says in the documentation:' b'' b'#in fact, if you live in the usa, and you are not a federal agency,' b"#you shouldn't actually run pgp on your computer, because public" b'#key partners wants to forbid you from running my software. pgp is' b'#contraband.' b'' b'- both pgp and ripem are export-restricted, and cannot be sent outside' b'the u.s. and canada. however, pgp already exists on many ftp sites' b'in europe and other places.' b'' b'whether you use pgp or ripem or whatever, the documentation to pgp is' b'recommended reading to anyone interested in such issues.' b'' b'note that the above facts, both regarding patent and export' b'restrictions, are somewhat controversial; many people think it' b"shouldn't be that way, and some people interpret various documents" b'differently. unfortunately, discussions of it on the net inevitably' b'seem to produce more heat than light, and probably belong in' b'misc.legal.computing. (see: "disclaimer")' b'' b'12) what about rpem?' b'' b'rpem stands for rabin privacy enhanced mail. it was similar to ripem,' b'but used a public-key cipher invented by rabin (which is not rsa) in' b'an attempt to avoid the patent on rsa. it was written by mark' b'riordan, the same author as ripem.' b'' b'its distribution was halted when, contrary to the beliefs of many' b'(including rabin), public key partners (pkp) claimed that their patent' b'was broad enough to cover any public-key cipher whose strength rested' b'in the difficulty of factoring products of large primes, not just rsa.' b'this claim is not universally accepted by any means, but was not' b'challenged for pragmatic reasons.' b'' b'rpem is not really used anymore. it is not compatible with ripem or pgp.' b'' b'13) what is mime?' b'' b'mime stands for multipurpose internet mail extensions, and is' b'described in rfc you can find out about it in the newsgroup' b'comp.mail.mime. how pem should interact with mime is not yet entirely' b'clear; some people use the stopgap solution of having a mime type' b'application/x-ripem in order to send ripem messages as mime ones. i' b'hope some standards will emerge. draft internet documents exist on' b'the matter.' b'' b'14) i have this simple way to defeat the security of ripem...' b'' b'you may wish to check the companion post "ripem-attacks" which' b"discusses some of the more obvious attacks on ripem's security and" b'what procedures will minimize the risk. ripem\'s main "weak area" is' b'probably key distribution.' 