b'' b"this doesn't answer the original question. is os/2 a multi-user os?" b'and no mention was made of an ether card either. but from a disk/data' b'point of view, why does scsi have an advantage when it comes to multi-' b'tasking? data is data, and it could be anywhere on the drive. can' b'scsi find it faster? can it get it off the drive and into the computer' b'faster? does it have a better cache system? i thought scsi was good at' b'managing a data bus when multiple devices are attached. if we are' b'only talking about a single drive, explain why scsi is inherently' b'faster at managing data from a hard drive.' b'you are making the same mistake i did: you are confusing the drive' b'interface to the data throughput interface. again from my mac ibm info' b'sheet {available by ftp on sumex-aim.stanford.edu in the' b'info-mac/report as mac-ibm-compare173.txt}:' b'expansion' b'both mac ibm' b'scsi: only external device expansion interface common to both mac and ibm.' b'allows the use of any device: hard drive, printer, scanner, nubus card' b'expansion {mac plus only}, some monitors, and cd-rom. apple developed some' b'specifications for scsi controlers while ibm has no exact controller' b'specifications {which results in added incompatibilities on ibm machines}.' b'main problem: there are a lot of external devices which are internal' b'terminated which causes problems for more then two devises off the scsi port' b'{a scsi chain is supposed to be terminated only at the begining and at the' b'end. any other set up causes problems for either mac or ibm}.' b'scsi-1: devices per scsi controller. 8-bit asynchronous {~1.5mb/s ave}' b'and synchronous {5mb/s max} transfer base. 16-bit scsi-1 requires a' b'scsi-2 controler chip and can provide only fast scsi-2 not wide scsi-2' b'which are both 16-bit interfaces {see scsi-2}.' b'scsi-2: devices per scsi controller in scsi-2 mode. scsi-2 is fully' b'scsi-1 complient and tends to be implimented as a very fast scsi-1 since it' b'needs a different controller interface in both hardware {which tends to be' b'very expendsive} and software. transfer speeds are 4-6mb/s with 10mb/s burst' b'{8-bit}, 8-12mb/s with 20mb/s burst {16-bit}, and 15-20mb/s with 40mb/s burst' b'{32-bit/wide and fast}. scsi-2 in scsi-1 mode is limited to devices and' b'reduced 8-bit or 16-bit {fast only} throughput due to the difference between' b'scsi-1 and wide scsi-2 ports.' b'' b'ibm' b'hd interfaces {limited to hard drives by design or lack of development}:' b'[...]' b'ide: integrated device electronics' b'currently the most common standard, and is mainly used for medium sized' b'drives. can have more than one hard drive. asynchronous transfer: ~5mb/s max.' b'' b'so at its lowest setting scsi-2 interface in asynchronous scsi-1 mode averages' b'the through put maximum of ide in asynchronous mode. in full scsi-2 mode' b'it blows poor ide out the window, down the street, and into the garbage can.' b'the problem becomes can the drive mechanisim keep up with those through put' b'rates and that is where the bottleneck and cost of scsi-2 comes from. not' b'the interface itself but more and more from drive mechanisims to use the' b'scsi-2 through put. the cost of scsi interface is a self fulliling' b'prophisy: few people buy scsi because it is so expencive for the pc, which' b'in turn convices makes that mass producing scsi {which would reduce its' b'cost} is unwarented, and so scsi is expencive. {that is the effect of the' b'rule of scale: the more items sold the less each item has to bare the brunt' b'the cost of manufacture and so the less each item has to cost}' b'' b'scsi-2 allows a drive mechanisims through put to be limited by the drive while' b'ide itself limits the through put.' 