b'' b'writes:' b' intersection between a line and a polygon (undecidable??),' b' \tby dave baraff, tom duff' b'' b' in recent years, many geometric problems have been successfully modeled in a' b' new language called postscript. (see "postscript language", by adobe systems' b' incorporated, isbn co. b'' b' so, given a line l and a polygon p, we can write a postscript program that' b' draws the line l and the polygon p, and then "outputs" the answer. by' b' "output", we mean the program executes a command called "showpage", which' b' actually prints a page of paper containing the line and the polygon. a quick' b' examination of the paper provides an answer to the reduced problem q, and' b'thus' b' the original problem.' b'' b'curiously, in modern postscript, the point in a polygon problem can' b'be solved even more easily. to wit:' b'' b'%!' b'%%title: point in polygon' b'%%for: the amusement of comp.graphics regulars' b'%%languagelevel: b'%%documentneededresource: humor sense thereof' b'%%endcomments' b'' b'% this program will test whether a point is inside a given polygon.' b'% currently it uses the even-odd rule, but that can be changed by' b'% replacing ineofill with infill. these are level operators,' b"% so if you've only got level you're out of luck." b'%' b'% the result will be printed on the output stream.' b'%' b'% caution: only accurate to device pixels!' b"% put a huge scale in first if you aren't sure." b'' b'% point to test' b'% put x and y coordinates here' b'' b'50 b'' b'% vertices of polygon in counter-clockwise order' b'% put array of pairs of coordinates here' b'[' b'[ b'[ b'[ b'[ b'[ b'[ b'[ b'[ b']' b'' b'dup get aload pop moveto dup length dup roll' b'sub getinterval aload pop lineto forall closepath' b'ineofill (yes!) (no!) ifelse 