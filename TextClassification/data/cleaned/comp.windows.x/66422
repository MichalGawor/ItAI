b'' b'archive-name: x-faq/part4' b'last-modified: b'' b'----------------------------------------------------------------------' b'' b'these usually are available from uucp sites such as uunet or other sites as' b'marked; please consult the archie server to find more recent versions.' b'' b'gnuplot\tx (xplot), postscript and a bunch of other drivers.' b'export.lcs.mit.edu [and elsewhere]:contrib/gnuplot3.1.tar.z' b'' b'gl_plot\tx output only b'comp.sources.unix/volume18' b'' b'graph+' b'yallara.cs.rmit.oz.au:/pub/graph+.tar.z b'comp.sources.unix/volume8' b'' b'pdraw,drawplot\t\t2d and 3d x,ps' b'scam.berkeley.edu:/src/local/3dplot.tar.z b'scam.berkeley.edu:/src/local/contour.tar.z b'scam.berkeley.edu:/src/local/drawplot.tar.z b'uunet:~ftp/contrib/drawplot.tar.z' b'' b'xgraph\t\tplot, zoom. outputs ps or hpgl.' b'shambhala.berkeley.edu:/pub/xgraph-11.tar.z b'sun1.ruf.uni-freiburg.de:x11/contrib/xgraph-11.tar.z b'nisc.jvnc.net:pub/xgraph-11.tar.z b'comp.sources.x/volume3' b'or many other sites' b'' b'ace/gr (formerly xvgr and xmgr) xy plotting tools' b'ftp.ccalmr.ogi.edu b'xview version: /ccalmr/pub/acegr/xvgr-2.09.tar.z' b'motif version: /ccalmr/pub/acegr/xmgr-2.09.tar.z' b'[mirrored on export in /contrib/acegr]' b'' b'xgobi\t\tan interactive dynamic scatter-plotting tool from bellcore' b'lib.stat.cmu.edu: general/xgobi* [log in as statlib with your email' b'the one-line message "send xgobi from general"]' b'' b'robot\t\ta scientific xview-based graph plotting and data analysis tool' b'ftp.astro.psu.edu:pub/astrod/robotx0.46.tar.z b'' b'plotmtv\ta multi-purpose 2d/3d plotter' b'tanqueray.berkeley.edu:/pub/plotmtv1.3.1.tar.z' b'' b'' b'(mike black)]' b'' b'----------------------------------------------------------------------' b'' b'a version of "sc" for x and which supports lotus files is available from' b'vernam.cs.uwm.edu in xspread2.0.tar.z. it also includes graphing functions.' b'' b'the gnu package oleo is available in prep.ai.mit.edu:pub/gnu/oleo-1.2.2.tar.z;' b'it can generate postscript renditions of spreadsheets.' b'' b'also:' b'' b'several of the below are part of integrated office-productivity tools which may' b'also include word-processing, email, conferencing, image processing, and' b'drawing/painting, among other features.' b'' b'vendor product contact information' b'------ b'access technology b'informix wingz b'quality software products q-calc/exclaim (ca:213-410-0303)' b'unipress q-calc b'uniplex uniplex b'digital\t\t\t decdecision 1-800-digital' b'applix\t\t\t aster*x\t 1-800-8applix.' b'elsid software systems\t ripcam\t b'' b'sas by the sas institute now has a spreadsheet module; the x version is' b'available on the current popular risc platforms.' b'' b'----------------------------------------------------------------------' b'' b'vendor \tproduct\t\tcontact information' b'------\t\t\t\t-------\t\t-------------------' b'productivity solutions\t\tultra planner\t617-237-1600' b'digital tools, inc.\t\tautoplan\t408-366-6920, b'nasa\t\t\t\tcompass\t\t404-542-3265,' b'gec-marconi software systems\tgecomo plus\t703-648-1551' b'gec-marconi software systems\tsize plus\t703-648-1551' b'tei, inc\t\t\tvue\t\t408-985-7100' b'mantix\t\t\t\tcascade\t\t703-506-8833' b'advanced management solutions\tschedule publisher\t800-397-6829' b'auburn university\t\t??\t\t??' b'' b'' b'----------------------------------------------------------------------' b'' b'ghostscript is distributed by the free software foundation' b'(617-876-3296) and includes a postscript interpreter and a library of graphics' b'primitives. version is now available; the major site is prep.ai.mit.edu.' b'[11/92]' b'' b'gspreview (by the computing laboratory of the university of kent at' b'canterbury) is an x user interface (wcl-based) to the ghostscript b'interpreter the source is available for anonymous ftp from' b'export.lcs.mit.edu as gspreview.2.0.tar.z.' b'' b'interface for ghostscript. check ftp.cs.wisc.edu or prep.ai.mit.edu for' b'/pub/ghostview-1.4.1.tar.z there are also several executables available' b'on ftp.cs.wisc.edu:/pub/x/ghostview-exe for various architectures.' b'' b'also:' b'' b"scriptworks is harlequin's software package for previewing and printing" b'postscript(r) descriptions of text and graphics images; previewers for x are' b'available. for information call or send email to' b'' b"image network's xps supports the full postscript language and renders" b'in color, grayscale, or monochrome. fonts displayed are anti-aliased. info:' b'image network, b'' b"digital's dxpsview runs on uws and b'' b"sun's pageview runs with the x11/news server." b'' b'----------------------------------------------------------------------' b'' b'the latest freely-available xgks can be obtained from' b'x11r4 contrib xgks from ibm and the university of illinois. the release' b'is on unidata.ucar.edu as pub/xgks.tar.z. b'in addition, grafpak-gks is available from advanced technology center' b'(714-583-9119).' b'a 2b implementation which includes drivers for a variety of devices. it can be' b'passed an x window id to use. the package includes both c and fortran bindings.' b'' b'' b'xgks it is available on export in contrib/xgks-widget.tar.z.' b'' b'----------------------------------------------------------------------' b'' b'the first official release of pex is with x11r5; fix-22 brings the' b'sample implementation server to version b'' b'the final pex protocol specification is now available via anonymous' b'ftp to export.lcs.mit.edu in the directory /pub/docs/pex/.' b'changes made from the public review draft are listed in the file "5.1p_changes"' b'in that directory. b'' b'the final pexlib document is on export in pub/docs/pexlib. b'' b'there is now available from the university of illinois an' b'implementation of the pex specification called uipex. it contains a "near-' b'complete" implementation of phigs and phigs plus. the file' b'pub/uipex/uipex.tar.z is on a.cs.uiuc.edu the porting platform' b'' b'available on export as pext.tar.z; it includes a pex widget making it easier to' b'include pex in xt-based programs.' b'' b'----------------------------------------------------------------------' b'' b'the xtex previewer for tex files is available from a number of archive' b'sites, including uunet; the current version is usually on ftp.cs.colorado.edu' b'(128.138.204.31) in seetex-2.18.5.tar.z; pre-converted fonts are also on that' b'machine. the distribution all includes "mftobdf" which converts pk, gf, and pxl' b'fonts to bdf format, where they can then be compiled for use by your local x' b'server.' b'the xdvi dvi-previewer is fairly comprehensive and easy to use. it is' b'also available from a number of sites, including uunet and export.lcs.mit.edu;' b'current version is patchlevel b'' b'----------------------------------------------------------------------' b'' b'x11r4 has two previewers for device-independent troff: the supported' b'client xditview, and the contributed-but-well-maintained xtroff. an earlier' b'version of xtroff also appeared on the r3 contributed source. xditview is also' b'in the r5 distribution.' b'in addition, the xman client can be used to preview troff documents' b'which use the -man macros (i.e. man pages).' b'if psroff is used its output can be viewed with a postscript previewer.' b'' b'in addition:' b'' b'xproof, an x previewer for ditroff has been contributed by marvin' b'contrib/xproof*. \t[8/90]' b'' b'elan computer group (ca: produces eroff, a modified' b'troff implementation, and elan/express, an x11 eroff previewer.' b'' b'rewritten troff formatter, a better intermediate language with backwards' b'compatibility, and an x11[r3,r4] previewer. (this is the package adopted by' b"at&t's own mis department, and used in and re-sold by many parts of at&t)." b'' b'image network (1-800-toxroff; ca: offers the xroff' b'package, which includes a fine modified troff implementation and a set of' b"x11-based page previewers. (this is the package oem'ed by several hardware" b'vendors.)' b'' b'' b'----------------------------------------------------------------------' b'' b'a new release of the dirt interface builder by richard hesketh works' b'with x11r5 and includes some support for the motif widget set. from the readme:' b'this builder allows the interactive creation and rapid prototyping of x user' b'interfaces using the x toolkit and a number of widget sets. dirt generates' b'"wc widget creation" resource files and this distribution also includes the' b'widget creation library (version with the exception of the demos and' b'mri/ari source code) with the kind permission of its author david e. smyth.' b'check dirt.readme, dirt.a2.0.tar.z, and dirt.ps.z on export.lcs.mit.edu.' b'' b'the interviews c++ toolkit contains a wysiwig interface builder' b'called ibuild. ibuild generates code for an interviews application complete' b'with imakefile and an x-resource file. documentation is /pub/papers/ibuild.ps' b'on interviews.stanford.edu b"quest windows's objectviews c++ package includes an" b'interactive building tool.' b'' b'druid (demonstrational rapid user interface development) runs on sparc' b'machines using osf/motif it is intended eventually to be a full uims but' b'apparently now has only support for creating the presentation components, for' b'which it generates c/uil code. info: singh g, kok ch, ngan ty, "druid: a system' b'for demonstrational rapid user interface development". proc. acm siggraph symp' b"on user interface software and technology (uist'90). acm, ny, pp:167-177." b'' b'the byo interface builder is implemented in tcl.' b'' b'also:' b'in addition, these commercial products (unsorted) are available in' b'final or prerelease form [the following the product name indicates that the' b'product is known to allow the designer to specify for each widget whether a' b'particular resource is hard-coded or written to an application defaults file,' b'for at least one form of output]. some are much more than user-interface tools;' b'some are full user interface management systems; information on most is not' b'up-to-date:' b'' b'product name\t\tlook/feel\tcode output\t\tvendor' b'' b'hp interface\t\tmotif 1.1\tc(xm)\t\t\thp/visual edge' b'architect/ uimx' b'open look express\topen look\tc(xol+ helper lib)\tat&t b'visual edge' b'uimx *\t\tmotif 1.1\tc(xm helper code)\tvisual edge' b'514-332-6430' b'& distributors' b'vuit 2.0\t\tmotif 1.1\tc/uil[r/w]\t\tdec' b'(1-800-digital)' b'x-designer *\tmotif 1.1\tc(xm); c/uil\t\timperial' b'software' b'technology, ltd' b'(+44 b'xfacemaker2 (xfm2) \tmotif 1.0\tc;c/script (c-like procedural' b'language);c/uil' b'nsl' b'(33 b'builder xcessory *\tmotif 1.1\tc(xm); c/uil[r/w]\tics' b'ada\t\t\t(617-621-0060)' b'xbuild *\t\tmotif 1.0\tc(xm); c/uil \t\tnixdorf' b'(617-864-0066)' b'ixbuild\t\t\tmotif 1.1\tc(xm); c/uil\t\tixos software' b'089/461005-69' b'teleuse *\t\tmotif 1.1.5\tc(xm); c/uil[r/w]' b'telesoft' b'(619-457-2700)' b'ezx 3.2\t\t\tmotif 1.1\tc(xm +helper lib);c/uil;ada' b'sunrise' b'(401-847-7868)' b'snapix\t\t\tmotif\t\tc/xm\t\t\tadnt' b'+33 b'openwindows developers\topen look \tgil c/xview]\tsun' b'guide 3.0\t\t\t\tgil c++/xview]' b'gil c/olit]' b'gil c/postscript for tnt]' b'exocode/sxm\t\tmotif\t\tc(xm)\t\t\texpert object' b'exocode/plus\t\topen look\txview\t\t\t708-676-5555' b'tae+\t\t\txw;motif\tc(xw,xm); c/tcl (tae control language,' b'like uil[needs helper library]);' b'vax fortran; ada; c++' b'nasa goddard' b'(301) b'mob, xsculptor\t\t\tmotif; openlook\tc/xm,uil; c/xol\t\tkovi' b'408-982-3840' b'psm\t\t\tpm, msw 3.0,\tc/uil\t\t\tlancorp' b'motif 1.1.2,mac\t\t\t\tpty ltd.' b'+61 b'fax: b'(australia)' b'motifation\t\tmotif 1.0|1.1.2\tc(xm)\t\t\taka edv' b'+49 b'+49 fax' b'uib\t\t\topen look/motif\tc++(oi)\t\t\tparcplace' b'+1 b'' b'look for magazine reviews for more complete comparisons of meta-file formats,' b'documentation, real ease-of-use, etc; unix world and unix review often carry' b'articles.' b'' b'in addition, neuron data makes open interface, a' b'window-system-independent object toolkit which supports interfaces which are' b'or resemble (supersets of) mac, windows, and motif and open look; the package' b'includes an interface builder.' b'' b'in addition, the grammi builder supports the development of ada/x' b'applications using its own set of objects which are planned to have a motif' b'look. grammi is written in ada and generates ada specs and stub bodies.' b'(1-800-grammi-1).' b'' b'in addition, these non-wysiwyg but related products may help for goals' b'of rapid prototyping of the application interface:' b'' b'wcl: the widget creation library. basically describes the widget' b'hierarchy and actions in a resources file; available from fine archive servers' b'everywhere, including devvax.jpl.nasa.gov in pub/. wcl provides' b'a very thin layer over xt without any internal tweaking. version is current' b'[3/93].' b'winterp: an xlisp-based motif toolkit allows for interpretive' b'programming. the copy on the r4 tape is outdated; get a copy off export or' b'the serpent uims permits the building of user-interfaces without' b'specific knowledge of coding but with an understanding of attributes being set' b'on a particular [motif] widget. beta release is available from' b'ftp.sei.cmu.edu and can be found in /pub/serpent. serpent is' b'also available on export.lcs.mit.edu in /contrib/serpent. email' b'available as "agora" from aset, woodhaven drive, pittsburgh, pa b'garnet is a common lisp-based gui toolkit. information is available' b'metacard is a hypertext/rapid application development environment' b'is available via anonymous ftp from ftp.metacard.com, csn.org, or' b'128.138.213.21.' b'' b'----------------------------------------------------------------------' b'i want to have a shell script pop up menus and yes/no dialog boxes if the user' b'is running x.' b'' b'several tools in the r3 contrib/ area were developed to satisfy these' b'needs: yorn pops up a yes/no box, xmessage displays a string, etc. there are' b'several versions of these tools; few, if any, have made it to the r4 contrib/' b'area, though they may still be available on various archive sites.' b'package to comp.sources.x ("v08i008: xmenu") for 1-of-n choices. b'two versions of xprompt have been posted to comp.sources.x, the latter' b'there is a version of xmenu available from comp.sources.x; it is' b'being worked on and will likely be re-released.' b"xp-1.1.tar.z, xpick-1.0.tar.z and xzap-1.0.tar.z on export's contrib/" b'simple display and choice-making tools in k&p. b'xtpanel lets the user build a panel containing interactive objects such' b'as buttons, sliders, text fields, etc., either from the command line or using a' b'simple scripting language. it is available for anonymous ftp from' b'hanauma.stanford.edu as pub/x/xtpanel.tar.z and may also be found' b'in the alt.sources archives.' b'' b'----------------------------------------------------------------------' b'' b'xdbx, an x interface to the dbx debugger, is available via ftp from' b'export. the current version is patchlevel b'an x interface to gdb called xxgdb is more like xdbx it is part' b'of comp.sources.x volume xxgdb-1.06.tar.z is on export.' b'mxgdb is a motif interface to gdb by jim tsillas' b'ups is a source-level debugger which runs under the x11 and sunview' b'window systems on sun and dec platforms. it is available from export' b'(18.24.0.11) as contrib/ups-2.45.tar.z (also ups-2.45-to-2.45.2.patch.z)' b'and unix.hensa.ac.uk in /pub/misc/unix/ups (or try mail to' b'' b'also:' b'mips produces a highly-customizable (wcl-based) visual debugger.' b"you should be able to use sun's dbxtool with its x11/news server." b'the codecenter source-level debugger, available on most' b'major platforms, includes an x-based interface.' b'at&t offers the examine graphical interface, an x11 interface to dbx' b'and c++ dbx for sun3 and sun4 and sdb and sdb++ for and 3b2 platforms. call' b'solbourne offers pdb, its x-based debugger for c, c++' b'and fortran. pdb uses the oi toolkit and runs in either open look or motif' b'mode.' b'systems.' b"lucid's energize programming system, a tightly integrated development" b'environment for c and c++ programs, incorporates a graphical user interface on' b'(800) b'' b'----------------------------------------------------------------------' b'' b'there are several protocol multiplexer tools which provide for the' b'simultaneous display of x clients on any number of machines.' b'xmx (an x protocol multiplexor) is available from wilma.cs.brown.edu' b'(128.148.33.66) as pub/xmx.tar.z it works independently of the server and does' b'not affect the application being shared; it was developed for use in the' b'electronic classroom.' b'xtv is a conference program which can be used to duplicate the' b'"chalkboard" on several displays. release is available on the x11r5 contrib' b'tapes; a more recent version is on ftp.cs.odu.edu as pub/wahab/xtv.r2.tar.z.' b'shx from michael altenhofen of digital equipment gmbh cec karlsruhe' b'also does this; it is a "wysiwis" (what you see is what i see) package in the' b'context of a computer-based learning/training tool to provide online help from' b'remote tutors but is also useful for general window sharing. information:' b'gatekeeper.dec.com:/pub/x11/contrib/shx.tar.z,' b'crl.dec.com:/pub/x11/contrib/shx.tar.z' b'modifications to shx for color mapping and private color allocation by' b'car/shx.car.tar.z.' b'xtrap is implemented as a server/library extension and can be used' b'to record and then replay an x session. it is available as:' b'gatekeeper.dec.com pub/x11/contrib/xtrap_v31.tar.z' b'export.lcs.mit.edu contrib/xtrap_v31.tar.z' b'wscrawl can be used as a "multi-person paint program". it\'s available' b'on sax.stanford.edu as wscrawl.shar.z.' b'shdr implements a simple shared whiteboard, without a chalk-passing' b"mechanism. it's available on parcftp.xerox.com as pub/europarc/shdr.tar.z." b'sketchpad is a distributed interactive graphical editor' b'particularly designed for sketching. sources have been posted to alt.sources' b'and are available from ftp.igd.fhg.de in ~ftp/incoming/sketchpad.' b'the nestor project is described in "upgrading a window system for' b'tutoring functions", michael altenhofen et al., the proceedings of the exug' b'conference b'' b'also of use:' b'hewlett-packard co. has a commercial product, "hp sharedx" which works' b'under hp-ux currently on their and series workstations and their' b'hp 700/rx x stations. machines receiving shared windows can be any x server.' b'hp sharedx consists of a server extensions and a motif based user interface' b'process. contact your local hp sales rep. for more information.' b'ibm offers a commercial product.' b'sun offers multi-user confering software called showme.' b'insoft (mechanicsburg, pa, usa) offers multi-user confering software' b'called communique.' b'' b'' b'----------------------------------------------------------------------' b'----------------------------------------------------------------------' b'' b'this faq includes information on a number of "gotchas" that can bite' b'you on particular system. however, the best source of general information on' b'building the x11 release is found in the release notes. the file is bundled' b"separately from the rest of the release, so if it's become separated from your" b'sources you can ftp another copy separately: the file relnotes.[ms,ps,txt] at' b'the top of the distribution. the file relnotes is also available from the' b'xstuff mail server.' b"in addition, o'reilly associates's volume on x administration" b'includes information on configuring and building x.' b'' b'----------------------------------------------------------------------' b'' b'apparently gcc is the problem; it seems to produce fine code for all' b'sun displays except for the cgsix. the new sungx.o distributed with fix-07' b'may fix the problem (note: not known to work on solaris).' b'' b'----------------------------------------------------------------------' b'' b'if you get errors with _dlsym _dlopen _dlclose undefined, link with' b'libdl.a. add "-ldl" to your and eventually your site.def. you may want to' b'surround it with "-bstatic -ldl -bdynamic" if you add it to the extra_libraries' b'variable, since "syslibs" get added after extra_libraries on the eventual' b'compilation command; otherwise you may not have a shared libdl. (or compile' b'the stubs shared.)' b'' b'' b'----------------------------------------------------------------------' b'' b'in sunos sun fixed a shared-library bug in ld which conflicts' b'with the way x11r4 builds the shared xmu library, causing these symbols to be' b'undefined when building some x11 clients:' b'_get_wmshellwidgetclass' b'_get_applicationshellwidgetclass' b'compiling "-bstatic -lxmu -bdynamic" appears to work.' b'' b'to solve the problem if you are using openwindows (x11r4-based xt), please' b'contact your local sun office and request the following patches:' b'' b'patch i.d. description' b'100512-02 4.1.x openwindows libxt jumbo patch' b'100573-03 4.1.x openwindows undefined symbols when using' b'shared libxmu' b'' b'' b'a source patch for use with the mit x11r4 libraries was developed by conrad' b'get around this problem. the patch is on export in b'contrib/x11r4_sunos4.1.2_patch_version3.z' b'' b'----------------------------------------------------------------------' b'i used gcc to compile the whole distribution, but i get several segmentation' b'faults when running x.' b'' b'note first that gcc on risc machines does not necessarily result in' b'any performance increase; it certainly is not as noticeable as it is on the' b'680x0 or vax platforms.' b'' b'here is the problem: gcc and cc use incompatible methods of passing' b'structures as arguments and returning them as function values, so when' b'gcc-compiled parts of x are linked with sun-supplied functions that pass or' b'return structs, run-time errors occur. affected programs include rgb and' b'the server.' b'' b'this is from the gcc manual:' b'' b'on the sparc, gnu cc uses an incompatible calling convention for' b'structures. it passes them by including their contents in the argument' b'list, whereas the standard compiler passes them effectively by' b'reference.' b'' b'this really ought to be fixed, but such calling conventions are not yet' b"supported in gnu cc, so it isn't straightforward to fix it." b'' b'the convention for structure returning is also incompatible, and' b"`-fpcc-struct-return' does not help." b'' b'you can duck the problem either by using cc throughout or by using it for just' b'the routines which cause incompatibilities; the problem cannot be solved with' b'compilation flags.' b'' b'files which need to be compiled using cc include:' b'server/os/4.2bsd/oscolor.c' b'rgb/rgb.c' b'' b'in addition, several of the "inet_" functions use structs as args or' b'return values:' b'clients/xhost/xhost.c' b'clients/xauth/gethost.c.' b'calls to inet_addr in /lib/clx/socket.c and lib/x/xconndis.c are possibly' b"harmless as they don't involve structs." b'' b'' b'----------------------------------------------------------------------' b'when i try to run xinit or the xsun server i get the error' b'"getting interface configuration: operation not supported on socket.' b'fatal server bug! no screens found."' b'' b"running the gcc fixincludes script apparently didn't work. you can do" b'this simple test:' b'' b'#include <sys/ioctl.h' b'siocgifconf' b'' b'run that through cc -e and gcc -e. the last line of output is the piece of' b'interest; it should be identical (modulo irrelevant differences like' b"whitespace). if the gcc version has 'x' where the cc version has 'i', your" b"fixincludes run didn't work for some reason or other; go back to your gcc" b'sources and run `fixincludes`; then rebuild the x distribution. if they are' b'identical, try running a make clean in mit/server and rebuilding, just to make' b'sure everything gets compiled with the proper include files.' b'' b'' b'----------------------------------------------------------------------' b'in mit/server/ddx/sun/suncg3c.c, we have found "missing" defines for' b'cg3ac_monolen, cg3bc_monolen, cg3ac_enblen, cg3bc_enblen. what should these be?' b'' b'the r4 errata list distributed after x11r4 mentions that you can add' b'these lines to the file on older sunos versions (e.g. to compile:' b'#define cg3ac_monolen b'#define cg3ac_enblen cg3ac_monolen' b'#define cg3bc_monolen cg3ac_monolen' b'#define cg3bc_enblen cg3ac_monolen' b'' b'however, the sun3 should not actually ever have the cg3 device, and so' b'references to it can be removed from mit/server/ddx/sun/suninit.c and the' b'imakefile. b'' b'----------------------------------------------------------------------' b"the file <sundev/cg6reg.h isn't being found." b'' b'sun omitted <sundev/cg6reg.h from sunos remove the #include' b'from suncg6c.c and replace it with the line' b'#define cg6_vaddr_color 0x70016000' b'the file has changed from earlier versions of sunos and should not be copied' b'from another distribution.' b'' b'----------------------------------------------------------------------' b'all of the executables that i try to run have the following results:' b'ld.so: libxmu.so.4: not found' b'or even:' b'ld.so: call to undefined procedure __gethostname from 0xf776a96c' b'' b'if you are building with shared libraries on a sun, remember that you' b'need to run "ldconfig" as root after installing the shared libraries (if you\'ve' b"installed x on a file-server, run it on the server's clients, too). while" b'building and installing the distribution, you need to be careful to avoid' b'linking against any existing x shared libraries you might have (e.g. those' b'distributed with openwindows). you should make sure you do not have' b'ld_library_path set in your environment during the build or the installation.' b'if you are going to keep xterm and xload as setuid programs, please note that' b'the shared libraries must be installed in /usr/lib, /usr/local/lib, or' b'/usr/5lib for these programs to work (or else those programs must be linked' b'statically). [courtesy mit x consortium]' b'note also that the program mkfontdir is run as part of the build; it' b'attempts, however, to use the shared libraries before they have been installed.' b'you can avoid the errors by building mkfontdir statically (pass -bstatic to' b'most c compilers).' b'' b'----------------------------------------------------------------------' b'' b'this is a bug in the olit. _xtqstring was an external symbol that existed in' b"x11r4 (upon which ow 3.0's libxt is based). it wasn't documented and was" b"removed in x11r5 (mit's guarantee of upward compatibility between the r4 and r5" b'libraries only applied to the documented interface).' b'' b'a workaround is to temporarily set your ld_library_path to point to the x11r4' b'or openwindows xt library that you linked the program against.' b'' b'' b'----------------------------------------------------------------------' b'' b'there is a security problem with certain r4 clients (xterm and xload)' b'running under sunos that have been installed setuid root and are using' b'shared libraries; to avoid the problem, do one of these:' b'1) make the program non-setuid. you should consult your system' b'administrator concerning protection of resources (e.g. ptys and /dev/kmem) used' b'by these programs, to make sure that you do not create additional security' b'problems at your site.' b'2) relink the programs statically (using -bstatic).' b'3) install the libraries before linking and link with absolute paths' b'to the libraries.' b'' b'' b'the r5 version of xterm does this automatically by rebuilding xterm against the' b'newly-installed libraries when xterm is being installed; this prevents an suid' b'program from being built with libraries specified relatively. note that this' b'may cause an inconvenience when doing the installation from nfs-mounted disks.' b'xload has been rewritten to avoid the problem.' b'' b'----------------------------------------------------------------------' b'' b'on many systems the frame-buffer is unsecured by default; this permits' b'anyone who can log into your workstation to peek at your windowing session by' b'accessing the frame-buffer directly, or, as less of a privacy issue but perhaps' b'more annoying, to [accidentally] start up a second x session on your console' b'display. check the man page for fbtab(5).' b'' b'' b'----------------------------------------------------------------------' b'----------------------------------------------------------------------' b'' b'imake is not a replacement for the make program; instead, it is a' b'makefile-generator that takes advantages of the include-file and macro-' b'processing capabilities of the c preprocessor cpp to generate makefiles' b'suitable for building software on a particular system. although it is not' b'specific to x, the x release uses it to help solve a number of the' b'configuration issues that arise in making such a large system widely portable.' b'imake has a fairly steep learning curve, in part because the process by' b'which the system-specific configuration files, system-independent configuration' b'files, and individual imakefiles are melded to produce a makefile is not' b'obvious.' b'there have been several different versions of imake; the r3, r4, and' b'r5 versions are different.' b'' b'you can obtain information on imake from these sources:' b'- the r4 and r5 release notes and imake man page include information on' b'using imake to build x' b'- the r4 and r5 file mit/config/readme also contains useful information' b"- on the r4 tapes, contrib/doc/imake/imake.tex is mark moraes' r3/r4" b'guide to imake.' b'- the r5 mit/doc/config/usenixws/paper.ms contains a paper by jim' b'fulton on an early version of imake' b'explanation of how imake works and how to use it in configuring x for non-' b'supported systems; the document is available from ftp.primate.wisc.edu' b'in the directory ~ftp/pub/imake-stuff; look for config-x11r4.ms (troff) and' b'config-x11r4.ps (postscript). some supplemental appendices are nearby.' b'[7/91: document version is now these imake papers are available by email;' b'- see "system administration imake: friend of foe?" by dinah mcnutt' b'in the november issue of sunexpert.' b'- german readers should expect in june an article "das meta-make' b'/ i make, you make schwerelos" by rainer klute in "ix' b'multiuser-multitasking-magazin", directed at application programmers needing to' b'write imakefiles. an english-language derivative of this article is in the' b'x journal, issue b"- the o'reilly x resource issue contains paul davey's article on" b'demystifying imake.' b"- alain brossard's working document full of tips on imake is in" b'sasun1.epfl.ch:pub/imakefile.1.z.' b'' b'[1/91;12/91;5/92;8/92]' b'' b'----------------------------------------------------------------------' b'' b'versions are distributed with the r4 and r5 releases. an earlier' b'version is distributed with the x11r3 release; some third-party toolkits' b'redistribute versions of imake along with their own implementations of the' b'template and configuration files. there are no real standards for such' b'configuration files, although most *current* contributed software expects the' b'templates distributed with x11r5.' b'export contains the r5 distribution unpacked, so you can pick up imake' b'without picking up the entire distribution.' b'a stand-alone version of imake, but one stemming from x11r5, is in' b'ftp.germany.eu.net:pub/x11/misc/imake/imake-pure.tar.z b'' b'----------------------------------------------------------------------' b'' b'if you have r4 or r5 installed on your system, run "xmkmf". this is a' b'script which runs imake for you with the correct arguments. the output is a' b'makefile configured for your system and based on the imakefile. then run make,' b'which will use that new makefile to compile the program.' b'' b'----------------------------------------------------------------------' b'when i try to compile certain programs, i get the following link error:' b'undefined:' b'_xshapequeryextension' b'_xshapecombinemask' b'' b'these routines are actually part of the shape extension to x (shape)' b'which was introduced in the mit x11r4 distribution and allows non-rectangular' b'windows. like the other sample server extensions, the shape extension will' b'only run on a server which supports it. pre-x11r4 servers, as well as many' b'vendor-supplied servers, do not support the shape extension, in which case' b'they will display rectangular windows anyway.' b'' b'in order to use the shape extension, you must link to the library' b'libxext.a. in the x11r4 distribution, this library and the associated includes' b'will be in the mit/extensions directory. if you do not have these files, do' b'not despair: many freeware programs which use the shape extension can also be' b'compiled without it by removing the -dshape define from the makefile; you can' b'probably do this and compile successfully against your older vendor-supplied x' b'libraries.' b'' b'' b'----------------------------------------------------------------------' b'when i run a x program that i wrote on a sunos or machine i get the' b'error "ld.so: symbol not found _xtinherit".' b'' b'what you are seeing is a side-effect of a kludge in the r4 libxt.a to' b"get sun shared libraries working. apparently, you can't share a function that" b'is both called and compared, as _xtinherit is. this was handled by putting' b'_xtinherit in the same file as a function that is always used, thereby' b'guaranteeing that it would be loaded that is, in initialize.c, where' b'xttoolkitinitialize() and xtinitialize() reside. these routines would normally' b'be called.' b'' b'you are probably seeing this error because your program is not a normal' b'xt-based program and does not call xttoolkitinitialize() anywhere.' b'1) it may be a program that uses xt functions but never opens a' b"connection to the x server. [osf/motif's uil had this problem; it called" b'xtmalloc() and other xt functions.] the solution is to add the call to your' b'program; the function does not have to be executed, just linked in.' b"2) alternatively, your program doesn't need any xt functions and is" b'correct in not calling xttoolkitinitialize() it may be an xlib or xview' b'program. in this case, you can remove -lxt from your link command.' b'' b'it should not be necessary to link the shared libraries statically,' b'although this will certainly solve the problem.' b'' b'11/90]' b'' b'----------------------------------------------------------------------' b'i have a program that worked well under x11r3. when i try to link it under' b'the current version of x, i get this message:' b'undefined:' b'_xtscrollbarsetthumb' b'_xttextsetinsertionpoint' b'_xttextreplace' b'' b'there were several name changes in the athena widget set (in addition' b'to the header files moving into <x11/xaw/); these are mentioned in the r4' b'release notes. in this case, these functions are not really xt functions but' b'are part of the xaw text widget and so have been renamed from xt* to xaw*.' b'[10/90]' b'' b'----------------------------------------------------------------------' b'----------------------------------------------------------------------' b'' b'the window manager controls how the input focus is transferred from one' b'window to another. in order to get keystrokes, your program must ask the' b'window manager for the input focus. to do this, you must set up what are' b'called "hints" for the window manager. if your applications is xlib-based, you' b'can use something like the following:' b'' b'xwmhints wmhints;' b'...' b'wmhints.flags inputhint;' b'wmhints.input true;' b'xsetwmhints(dpy, window, &wmhints)' b'' b'if your application is based on the xt intrinsics, you can set the xtninput' b"resource to be true (as you probably want to in any case); if you don't have" b"source, you can start up the application with the resource '*input:true'." b'' b'certain window managers, notably dxwm and olwm, are very picky about having' b'this done.' b'' b"if you are using sun's openwindows olwm, you can also add this resource" b"to your defaults file to use clients that aren't icccm-compliant." b'openwindows.focuslenience: true' b'' b'[mostly courtesy dave lemke of ncd and stuart marks of sun]' b'' b'----------------------------------------------------------------------' b'' b"you can't reliably tell; whatever mechanism you could use could be" b'spoofed in any case.' b"for most cases, you shouldn't care which window manager is running, so" b'long as you do things in an icccm-conformant manner. there are some cases in' b'which particular window managers are known to do things wrong; checking for' b'particular hints placed on the window by the window manager so that you can' b'sidestep the problem may be appropriate in these cases. alternatively, it may' b'be appropriate to determine which window manager is running in order to take' b"advantage of specific *added* features (such as olwm's push-pin menus) in order" b'to give your program *added* functionality. beware of usurping the window' b"manager's functions by providing that functionality even when it is missing;" b'this surely leads to future compatibility problems.' b'' b'----------------------------------------------------------------------' b'' b'there is no general framework such as the transskel program for the' b'macintosh which handles lots of the odds and ends and overhead of development' b'under a window system and which can be used as a platform for additional' b'development. in x, the problem is typically solved by using an interactive' b'application builder tool or by using cut&paste on existing x applications. good' b'applications which you might look to manipulate when you want to "test just' b'this one little thing" include contrib/clients/xskel, a simple r4 program that' b'puts up a window and allows sketching in it and offers a starting point for' b'quick hacks, the xaw examples in the examples/ directory in the r3 and r4' b'distributions, and the xlib "hello world" example in the r3 doc/helloworld and' b'r4 doc/tutorials/helloworld; an updated version of this program which uses r4' b'xlib calls and current icccm conventions was posted in to comp.windows.x' b'by glenn widener of tektronix. \t[3/90]' b'' b'in addition, a sample xt program (for xaw or xm) by rainer klute' b'showing how to open multiple displays and how to catch a broken display' b'connection is available on export.lcs.mit.edu in contrib/mdisp.tar.z. b'' b'----------------------------------------------------------------------' b'' b'the xtgetvalues interface for retrieving resources from a widget is' b'sensitive to the type of variable. your code may be doing something like this:' b'{' b'arg args[3];' b'int i;' b'int sensitive;\t\t/* oops; wrong data type b'i=0;' b'xtsetarg (args[i], xtnsensitive, &sensitive); i++;' b'xtgetvalues(widget, args, i b'...' b'}' b'' b'but xtnsensitive is a boolean, which on most machines is a single byte;' b'declaring the variable "sensitive" as boolean works properly. this problem' b'comes up often when using particular toolkits that redefine the xt types' b'dimension and position; code that assumes they are int will have similar' b'problems if those types are actually short. in general: you are safe if you' b"use the actual type of the resource, as it appears in the widget's man page." b'[11/90]' b'' b'----------------------------------------------------------------------' b'' b"you're probably trying to use these functions from application code." b'they should be used only internally to widgets; these functions are for a' b'parent widget to change the geometry of its children. other promising' b'functions, xtmakegeometryrequest() and xtmakeresizerequest(), are also for use' b'only by widgets, in this case by a child to request a change from its parent.' b'the only way for your application to request a geometry change for a' b'widget is to issue an xtsetvalues call setting some of the geometry resources.' b"although this will result in the widget-internal functions' being called, your" b'application code must use the standard xtsetvalues interface or risk the' b"widgets' data becoming corrupted." b'[the xlib calls xmovewindow() and xresizewindow() should similarly be' b"avoided; they shouldn't be used to change xtnx, xtny, xtnwidth, or xtnheight.]" b'' b'----------------------------------------------------------------------' b'' b'although there are various details of the current implementation of' b'the xt internals which make reparenting difficult, the major reason that no' b'such call exists is that it remains undefined what the set of resources for' b'the "new" widget should be. resources are typically set based on the location' b'in the instance hierarchy; what resources should change if the instance moves?' b"what should happen to the widget's children? and by the time such semantics are" b'defined, there would probably be little advantage over destroying the old' b'widget and creating a new widget in the correct location with the desired' b'resources, as setting the resources correctly is the majority of work in' b'creating a new widget.' b'' b'note that reparenting is possible in the oi toolkit.' b'' b'----------------------------------------------------------------------' b'' b'' b'"just the faqs, ma\'am." joe friday' b'--' b'david b. lewis\t\ttemporarily at but not speaking for visual, inc.' 