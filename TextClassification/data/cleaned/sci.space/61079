b'' b"(given that i've heard the shuttle software rated as level b'level out of how many? b'' b'... also keep in mind that it was' b'*not* achieved through the use of sophisticated tools, but rather' b"through a 'brute force and ignorance' attack on the problem during the" b'challenger standdown they simply threw hundreds of people at it and' b'did the whole process by hand...' b'' b"i think this is a little inaccurate, based on feynman's account of the" b'software-development process *before* the standdown. fred is basically' b'correct: no sophisticated tools, just a lot of effort and painstaking' b'care. but they got this one right *before* challenger; feynman cited' b'the software people as exemplary compared to the engine people. (he' b'also noted that the software people were starting to feel management' b"pressure to cut corners, but hadn't had to give in to it much yet.)" b'' b'among other things, the software people worked very hard to get things' b'right for the major pre-flight simulations, and considered a failure' b'during those simulations to be nearly as bad as an in-flight failure.' b'as a result, the number of major-simulation failures could be counted' b'on one hand, and the number of in-flight failures was zero.' b'' b'as fred mentioned elsewhere, this applies only to the flight software.' b'software that runs experiments is typically mostly put together by the' b'experimenters, and gets nowhere near the same level of tender loving care.' b'(none of the experimenters could afford it.)' b'--' b'' b'news-software: ureply b'' b"(given that i've heard the shuttle software rated as level b'level out of how many? b'' b'... also keep in mind that it was' b'*not* achieved through the use of sophisticated tools, but rather' b"through a 'brute force and ignorance' attack on the problem during the" b'challenger standdown they simply threw hundreds of people at it and' b'did the whole process by hand...' b'' b"i think this is a little inaccurate, based on feynman's account of the" b'software-development process *before* the standdown. fred is basically' b'correct: no sophisticated tools, just a lot of effort and painstaking' b'care. but they got this one right *before* challenger; feynman cited' b'the software people as exemplary compared to the engine people. (he' b'also noted that the software people were starting to feel management' b"pressure to cut corners, but hadn't had to give in to it much yet.)" b'' b'as fred mentioned elsewhere, this applies only to the flight software.' b'software that runs experiments is typically mostly put together by the' b'experimenters, and gets nowhere near the same level of tender loving care.' b'========================================================================' b'a couple of points on this thread.' b'' b'1. we have been using our processes since way before challenger. challenger' b'in and of it self did not uncover flaws.' b'' b'2. what mr. spencer says is by and large true. we have a process that is' b'not dependent on "sophisticated tools" (case tools?). however, tools' b'cannot fix a bad process. also, tool support for hal/s (the shuttle' b'language) is somewhat limited.' b'' b'3. the onboard flight software project was rated "level by a nasa team.' b'this group generates kslocs of verified code per year for nasa.' b'' b'4. feel free to call me if you or your organization is interested in more info' b'on our software development process.' b'' b'bret wingert' b'' b'' b'(713)-282-7534' b'fax: b'' b'' b'bret wingert' b'' b'' b'(713)-282-7534' b'fax: b'' b'' 