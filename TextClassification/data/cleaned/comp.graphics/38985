b'' b"anyone who thinks that tiff is too complex hasn't dealt with" b'cgm, asn.1, cda, dca, sgml, or any one of a number of other' b'very successful file format. people seem perfectly capable' b'dealing with these others.' b'' b'well, yeah, but unlike tiff they all do substantially more than encode' b'rectangular bitmaps. and the others are hardly trouble free. i hear that' b'it is quite common for cgm implementations not to interoperate.' b'' b'the annoying thing about tiff is that is that along with the useful' b'options, there are stupid options. the most egregious example is that' b'rather than picking a byte order and bit order and using it consistently' b'in all tiff files, byte and bit order are options and all tiff readers on' b'all machines, no matter what their natural byte order, have to be prepared' b'to do byte swapping. there are four slightly different fax formats b'again, any one of them would have been adequate. rgb images can be stored' b'by pixel or by component, complexity without function, etc, etc. i also' b"note that the tiff doc says that aldus' experiments show that lzw reliably" b'compresses as well or better than any of the fax formats, suggesting that' b'none of the fax formats are really useful.' b'' b"what's worse, a lot of the formats aren't even implemented very well," b'e.g., lzw limits code words to bits, while or bits would have' b'provided substantially better compression. and the lzw method compresses' b'bytes rather than pixels.' b'' b'but the absolute worst thing about tiff is that any vendor can register' b'proprietary tiff codes and formats without even publicly documenting them.' b'this means that there is no way to write a tiff reader that can reliably' b'read all incoming tiff files. some standard.' b'' b'regards,' 