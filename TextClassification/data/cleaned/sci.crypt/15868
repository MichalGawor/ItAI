b'' b'my original post was:' b'' b'i am building an oracle v6 database to serve as a repository for' b'information which is considered proprietary or confidential. as such' b'i want to verify the security of oracle passwords and apply some of' b'the same security checking techniques we use on our *nix systems.' b'specifically i would like to use crack, or something like it to check' b'the encrypted data for easily guessed passwords.' b'' b"the use of 'crack' would depend on oracle using the unix password" b'encryption scheme, does anyone know if this is the case, or what' b'method is used?' b'' b'any other methods for security checking audit in the oracle' b'environment would be much appreciated.' b'' b'this article will just scratch the surface of a few security' b'my thanks to the people who responded, both on usenet and from' b'oracle corp.' b'' b'the most common response was to suggest use of oracle audit' b'features or ops$ passwords to control access (opinion on ops$' b'included suggestions to use and not use). i was also advised to' b'use table views to refine the granularity of access control.' b'' b'one important security consideration in networked installations' b'is that ops$ accounts presume that the client host provides user' b'authentication. os/2 server ops$ users are only as secure as the' b'_least_ secure machine on the network. hence you should probably' b"not define any ops$ accounts on systems with pc's, or limit access" b'of ops$ accounts to data with no security concerns. unix oracle' b'servers provide for disabling ops$ access over the network (orasrv' b'option), while relying on host security for local processes.' b'' b'internally oracle provides powerful and well documented (sic)' b'audit mechanisms which the dba will use to monitor system and' b'data access. these tools can be used to track the primary security' b'risks from within the oracle environment.' b'' b'oracle password security is based on a proprietary usage of des' b'encryption. oracle corp. states that the algorithm is not prone' b'to cleartext attack. this is a difficult claim to substantiate' b'since the algorithm is unknown. the concern here is that if users' b'choose easily guessed passwords. _if_ a cracker can gain access' b'to your oracle database files through the host operating system,' b"s/he could extract the 'cyphertext' password data and apply" b'cryptanalysis techniques to learn the users passwords.' b'' b'as security risks go, the above scenario is pretty low severity.' b'certainly once an intruder has access to the raw database files,' b's/he can access to the data in them. if a cracker _could_ break' b'the passwords, however, s/he could do substantial damage without' b"alerting the auditing mechanism's, and leaving and audit trail" b'which would point to valid users. at present oracle (like unix)' b'provides no native means of ensuring that passwords are not' b'guessable.' b'' b'as with all computer security, the most important defense is to' b'educate users in the safe choice of passwords. these techniques' b'are well discussed in internet rfc#1281 and the crack manual,' b'(both available from ftp archive servers) and, unix(r) system' b'security (curry, david a. addison-welsey b'' b'' b'' b'boston scientific corp. watertown ma' 