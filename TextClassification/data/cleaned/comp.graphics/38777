b'' b'' b'what kind of polygons? shaded? texturemapped? hm? more comes into play with' b'fast routines than just "polygons". it would be nice to know exaclty what' b'system (vga is a start, but what processor?) and a few of the specifics of the' b'implementation. you need to give more info if you want to get any answers! :p' b'' b"i don't want texture mapped, cause if i did i'd asked for them. just" b"a simple and fast routine to do filled polygons. as for the processor, it'd" b"be for a minimum of a maybe if i can't find a good one for 286s." b'ideally, i want a polyn function that can clip to a user-defined viewport,' b'and write to an arbitrary location in memory. of course the chances of' b'' b'ok it is for a game that is 3d and you have listed the characteristics' b'that you are looking for. i think you may have left out a few' b'important parameters.' b'the polygons are all convex.' b'they have less than n sides. (you are drawing meshes walls doors etc.)' b'' b'i believe that the algorithms you can get that will only draw convex' b'polygons can be much more efficient than those that can draw' b'concave self intersecting polygons.' b'this efficiency can largely be attributed to the fact that' b'simple convex polygons only have a left and a right edge on each scan line.' b'complex (figure type polygons) can be a bit trickier.' b'' b'the less than n sides specification especially if it is a very small' b'number like or allow othe optimisations to be made.' b'' b'thus for a high speed game application i think you are looking for' b'code that exploits and is hence limited to drawing simple convex' b'polygons.' b'' b"finding something like that are pretty remote, so i guess i'd need the source" b"with it. oh, and i guess it would need to be in asm otherwise it'd be too" b"slow. i've seen some polygon routines in c, and they've all been waaay too" b"slow. its for a 3d vector graphics program. i've been hunting high and low" b'' b'it may have been that they were very general purpose algorithms.' b'if you limit yourself to or four sided simple convex polygons' b'i think you might be suprised how fast a c algorithm with a' b'asm block move to fill each scan line might actually be.' b'' b'' b"for a polyn function in asm, and i can't find one anywhere that i can use." b"i've found one or two polyn functions, but my asm is pretty bad, so i won't" b'even try to rewrite them. b'\t\t//lucas.' 