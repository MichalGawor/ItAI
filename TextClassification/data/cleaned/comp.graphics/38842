b'' b'| when an incident ray (i) strikes an object at point p the reflected' b'| ray (r) and the transmitted ray (t) is calculated from the formulae.' b'|' b'| calling the routine recursively on r and t will return the colours' b'| along the rays (r and t) as rcol and tcol. each object has its own' b'| colour ocol and each light source has licol i n).' b'|' b'| the question is:' b"| how do you combine rcol, tcol, ocol and all the licol's to get" b'| the correct resulting colour to return along the i ray?' b'' b"first of all (this is not a snide response), if you're confused about" b'this issue, you will stumble over a lot of other things as well. i suggest' b'that the weakness is your reference material. get "an introduction to ray' b'tracing" by andrew glassner for very good coverage of the raytracing' b'algorithm. you could also refer to the 2nd edition of foley van dam.' b'' b'on to the question. the simple answer is that you just keep adding up' b'all the contributions and then clamping at the maximum intensity. for' b'example, if your intensity values range from to then keep adding up' b'and clamp the resultant values to (you might have to clamp the lower' b"bound to if you have dark bulbs, but that's another issue so, you" b'get some illumination equation like this:' b'' b'i lambient ldiffuse(light[n]) lreflected ltransparent' b'' b'the contribution due to reflection is just summed with the light' b'intensity, as is the light due to transparency. now, a slightly less' b'hand-waving illumination equation is this:' b'' b'i kala kdld(light[n]) krlr ktlt' b'' b'that is, each component of the illumination equation is governed by the' b'material constants ka, kd, kr and kt. so the maximum you can get from' b'transparency for a given object, for example, might be for a' b'purple-colored glass object.' b'' b'hopefully this answers your question. i\'ll forward my "illumination' b'equation sermon" to you also.' b'' b'______________________________________________________________________________' b'steve hollasch kubota pacific computer, inc.' 