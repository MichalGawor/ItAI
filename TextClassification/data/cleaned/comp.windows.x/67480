b'' b'' b'' b'what sort of traffic is generated with the x-calls? i am curious to find' b'out the required bandwidth that a link must have if one machine running' b'dv/x is supporting multiple users (clients) and we require adequate response' b'time. anyone have any ideas b'' b'i expect the limiting factor will be your server machine, not the network' b'itself. to give you a real-world example, here at quarterdeck we have' b'roughly people using dvx to talk to a bunch of unix boxes, novell' b"file servers, and each other. it's not _too_ much of a load on our" b'ethernet (with maybe concentrators, so you have people on each' b'segment). if you had a badly loaded net, or the apps you wanted to run' b'were very network intensive, you could run into some slowdowns.' b'' b'but the biggest problem would be the machine itself. say you have a b'33 with plenty of ram and a fast hard disk and network card. if you have' b"10 people running programs off it, you're going to see some slowdowns" b"because you're now on (effectively) a mhz of course, dvx will" b'attempt to see if tasks are idle and make sure they give up their time' b"slice, but if you have working programs running, you'll know it." b'' b'' b'well i can buy a bigger and more powerful server machine because of the' b'significant drop in price year after year. the link i want to use' b"though (isdn 64k) is costly and the bandwidth limited. that's why my" b'interest lies in seeing if such a link can be used and see what traffic' b'goes through it.' b'' b"since i don't think tom always gets time to read this group, i'll take the" b'liberty of responding to some of this. if you really want tom to reply' b'' b'a 64k line is certainly going to restrict you far more than the 10mbps' b'ethernet that we typically run. how restrictive it will be depends on' b'what you run and how you run it. i would think that a couple of instances' b'of some really nasty program like "smoking clover" would make the link' b'useless for anyone else. on the other hand, probably xclocks quietly' b"updating every seconds or so wouldn't impact it too much. in the real" b'world, you will be somewhere in between these two extremes.' b'' b"going by the way i personally use x on a daily basis, i wouldn't want to have" b'to share that 64k link with more than other people.' b'' b'having said that, if you can tweak the programs being run (by adding' b'in calls to give up time slices when idle and that sort of' b'thing), you could probably run people on a given machine before' b'you started seeing slowdowns again (this time from network bandwidth).' b'' b'hmmm. has anyone at your centre monitored the traffic at all? are you' b'running any standard ms-windows programs like word what sort of' b'packets go blazing through? what size link do you have (2mb or 10mb b'what is the average traffic flow going through your network or do you' b'have few high peaks and then many low points?' b'' b'our corporate wan is as unique as any other. the usage patterns are not very' b'good predictors of how yours will behave. the only one of our low bandwidth' b'links that normally get used in this way is a 56k link to ireland that they' b'often use to run a dos text based client end of a client-server database' b'remotely from the dvx machine behind me. since the server end is (or was) always' b'at this end (california) it is faster to remotely run the client via desqview' b'x and have a short hop to the server than running the client locally and having' b'a long hop to the server. as i warned you, this tells us very little about' b'how you usage pattern will fill a 64k isdn link.' b'' b'running word for windows remotely is going to itself be very usage dependent.' b"let's break it into pieces and look at it. tracking the mouse pointer is easy" b'and efficient to translate from windows calls into x. popping up a menu is a' b'little more involved and will generate some traffic. restoring the screen' b'that was covered by that menu may be easy and may not be. does the server' b"that it's displaying on have backing store? if so and the server had enough" b'memory the display can be updated locally and will generate little network' b'traffic. if no backing store, then what was being covered up? if it was a' b'solid colored rectangle of space we can tell your xserver to draw that quite' b'easily. if it was a full color backdrop of ren stimpy we may have to send' b'it back to the x server bit by bit. dvx will do its level best to only redraw' b'that small area, but in some unusual cases the entire screen may need to be' b"repainted. assuning a 1024x768 screen with bits per pixel that's bits" b"that has to be sent. worst possible case you're looking at about seconds." b'in reality it would never be this bad since the screen will always have parts' b'that will be tranlatable into higher level x calls.' b'' b'' b'' b"it all really depends on what the programs are doing (ie. you're going" b'to see a slowdown from x-bandwidth a lot sooner if your apps are all' b'doing network things also...)' b'--' b'' b'what do you mean by network things? i vision using ms windows and other' b'windows applications over the network were the processes are running on' b'the server and all i am getting are the displays. i am wondering how' b'good is the x and subsequently dv/x protocol in transferring these' b"images with x-calls and displaying them on a client's machine." b'' b"x was designed from the ground up to be efficient across a network. it's" b'pretty good for this. x programs are best, dos text programs are almost' b'as good (since we conert them to x easily). something like winx is a hybrid.' b"we intercept the calls windows makes to it's graphics driver/ mouse driver" b'keyboard driver and convert them to x. the calls windows is making are in' b'no way designed to be efficient on a packet switched network. we go to a' b'lot of trouble to convert them to the highes level xlib calls we can, but' b'we are somewhat limited because we only know what windows and its applications' b'tell us.' b'' b'+--------------------------------------------------------------------------+' b'| quarterdeck office systems b'| gary rich problem resolution dept. b'| b'| anonymous ftp site qdeck.com b'| ---for--- ---write to--- b'| quarterdeck bbs b'+--------------------------------------------------------------------------+' b'' 