b'' b'permit me to quote fragments of' b'out of context.' b'' b'-newsgroups: sci.electronics,comp.lsi.cad' b'-date: feb gmt' b'' b'- currently the xnf format is propierty and i know of at least on person at' b'-a university who was able to get it after signing a non-disclosure agreement.' b'-the xilinx-bit map format is pretty well top secret. i would love to know it' b'-because then you could make self_modifying_hardware as it is i had to' b'-reverse eng. the xilinx tools to dump the bit map to the fpga because it only' b'-runs on the computer with the hardware key.' b'' b'self-modifying hardware could be *very* interesting b'computers that could write thier own programs (assemblers, compilers)' b"were an immense breakthrough from calculators that couldn't." b'' b'- i eagerly await a programmable gate array which uses a pd format and does' b'-not cost your first born to program. till then we will keep on reverse' b'-engineering whatever we can. as it is one company that i worked at has gone' b'-under. fpgas are what they needed to make their product competitive. they' b'-could not afford them. in the end you could say that they could not afford' b'-to not use them but the management discovered that too late.' b'- eric' b'' b'my condolences.' b'' b"i can't even imagine what i could do with self-modifing hardware." b'i *can* imagine self-modifying software,' b"and even though *all* my teachers say that's bad, even worse than goto," b'check out what the experts *used* to say about self-modifying code:' b'(he uses "orders" rather than "opcodes")' b'' b'' b'"on the principles of large scale computing machines"' b'by goldstine and von neumann,' b'collected in' b'_john von neumann: collected works, vol. v_' b'reprinted here with absolutely no permission from anyone.' b'"we plan... to have a full size binary digit) word hold' b'either contain' b'1 full size number equivalent to decimal digits,' b'but we will use the first binary digit to denote the sign)' b'or two binary digit) orders.' b'....' b'it should be added that this technique of' b'automatic substitutions into orders,' b"i.e. the machine's ability to modify its own orders" b'(under the control of other ones among its orders)' b'is absolutely necessary for a flexible code. thus, if' b'part of the memory is used as a "function table", then' b'"looking up" a value of that function for a value of the' b'variable which is obtained in the course of the computation' b'requires that the machine itself should modify, or' b'rather make up, the reference to the memory in the order which' b'controls this "looking up", and the machine can only make this' b'modification after it has already calculated the value of the' b'variable in question.' b'on the other hand, this ability of the machine to modify its' b'own orders is one of the things which makes coding' b'the non-trivial operation which we have to view it as."' b'' b'227 s. e. ave, tulsa, ok usa, sol universe v. b'' b'--' b'227 s. e. ave, tulsa, ok usa, sol universe v. 