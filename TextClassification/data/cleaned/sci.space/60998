b'' b'' b'nick haines sez;' b"(given that i've heard the shuttle software rated as level in" b'maturity, i strongly doubt that this [having lots of bugs] is the case).' b'' b"level out of how many? what are the different levels? i've never" b'heard of this rating system. anyone care to clue me in?' b'' b'this is a rating system used by arpa and other organisations to' b"measure the maturity of a `software process' i.e. the entire process" b'by which software gets designed, written, tested, delivered, supported' b'etc.' b'' b"see `managing the software process', by watts s. humphrey, addison" b'wesley an excellent software engineering text. the levels of' b'software process maturity are:' b'' b'1. initial' b'2. repeatable' b'3. defined' b'4. managed' b'5. optimizing' b'' b'the levels are approximately characterized as follows:' b'' b'1. no statistically software process control. have no statistical' b'basis for estimating how large software will be, how long it will' b'take to produce, how expensive it will be, or how reliable it will' b'be. most software production is at this level.' b'' b'2. stable process with statistical controls, rigorous project' b'management; having done something once, can do it again. projects' b'are planned in detail, and there is software configuration' b'management and quality assurance.' b'' b'3. the process is defined and understood, implementation is' b'consistent. this includes things like software inspection, a' b'rigorous software testing framework, more configuration management,' b"and typically a `software engineering process group' within the" b'project.' b'' b'4. statistical information on the software is systematically gathered' b'and analysed, and the process is controlled on the basis of this' b'information. software quality is measured and has goals.' b'' b'5. defects are prevented, the process is automated, software contracts' b'are effective and certified.' b'' 