b'' b" hi, i'm new to this group so please bear with me!" b' b' two years ago i wrote a sunview application for fast animation' b" of raster files. with sunview becoming rapidly obselete, i've" b' finally decided to rewrite everything from scratch in xview.' b" i put together a quick test, and i've found that xputimage()" b' is considerably slower (factor of on average?) than the' b' sunview command pw_rop() which moves image data from memory' b' pixrects to a canvas. this was on a sparc ipx. it seems that:' b' the x protocol communication is slowing things down; or' b' xputimage is inefficient...or both!' b'' b' using xputimage, your source is maintained by the client and the' b' destination is maintained by the server, thus you incur the overhead' b' of transporting through whatever client-server communications' b' mechanism you are using.' b'' b' is it possible for you to maintain your source images in pixmaps?' b' these are maintained by the server, so copying them into a window is' b' much cheaper.' b'' b' also make sure you are not sending any unnecessary xsyncs, or running' b' in xsynchonize mode.' b'' b'if you need speed, and your client can run on the same host as the x server,' b'you should use the shared memory extension to the sample x server (mit-shm).' b'xdpyinfo will tell you if your server has this extension. this is certainly' b'available with the sample mit x server running under sunos.' b'a word of warning: make sure your kernel is configured to support shared' b'memory. and another word of warning: openwindows is slower than the mit' b'server.' b'i have written an imaging tool (using xview for the gui, by the way) which' b'yields over frames per second for bit images, running on a sparc' b'ipc (half the cpu grunt of an ipx). this has proved quite sufficient for' b'animations.' b'' b'regards,' b'' b'richard gooch....' 